
AVRASM ver. 2.1.30  D:\Microprocessor-Laboratory\EX6\part1\code\Debug\List\A.asm Fri Nov 05 18:11:07 2021

D:\Microprocessor-Laboratory\EX6\part1\code\Debug\List\A.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\Microprocessor-Laboratory\EX6\part1\code\Debug\List\A.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\Microprocessor-Laboratory\EX6\part1\code\Debug\List\A.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0043 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3d54
000034 3325
000035 312e
000036 0066      	.DB  0x54,0x3D,0x25,0x33,0x2E,0x31,0x66,0x0
000037 0043
000038 6854
000039 7369
00003a 6920      	.DB  0x43,0x0,0x54,0x68,0x69,0x73,0x20,0x69
00003b 2073
00003c 4b4f
D:\Microprocessor-Laboratory\EX6\part1\code\Debug\List\A.asm(1130): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x73,0x20,0x4F,0x4B,0x0
                 _0x2000003:
00003e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003f 0002      	.DW  0x02
000040 0160      	.DW  __base_y_G100
000041 007c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000042 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000043 94f8      	CLI
000044 27ee      	CLR  R30
000045 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000046 e0f1      	LDI  R31,1
000047 bffb      	OUT  GICR,R31
000048 bfeb      	OUT  GICR,R30
000049 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004a e08d      	LDI  R24,(14-2)+1
00004b e0a2      	LDI  R26,2
00004c 27bb      	CLR  R27
                 __CLEAR_REG:
00004d 93ed      	ST   X+,R30
00004e 958a      	DEC  R24
00004f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000050 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000051 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000052 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000053 93ed      	ST   X+,R30
000054 9701      	SBIW R24,1
000055 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000056 e7ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000057 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000058 9185      	LPM  R24,Z+
000059 9195      	LPM  R25,Z+
00005a 9700      	SBIW R24,0
00005b f061      	BREQ __GLOBAL_INI_END
00005c 91a5      	LPM  R26,Z+
00005d 91b5      	LPM  R27,Z+
00005e 9005      	LPM  R0,Z+
00005f 9015      	LPM  R1,Z+
000060 01bf      	MOVW R22,R30
000061 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000062 9005      	LPM  R0,Z+
000063 920d      	ST   X+,R0
000064 9701      	SBIW R24,1
000065 f7e1      	BRNE __GLOBAL_INI_LOOP
000066 01fb      	MOVW R30,R22
000067 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000068 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000069 bfed      	OUT  SPL,R30
00006a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006e 940c 007d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0008 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0009 ADMUX=adc_input | ADC_VREF_TYPE;
000070 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000071 81e8      	LD   R30,Y
000072 b9e7      	OUT  0x7,R30
                 ; 0000 000A delay_us(10);
                +
000073 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000074 958a     +DEC R24
000075 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 000B ADCSRA|=(1<<ADSC);
000076 9a36      	SBI  0x6,6
                 ; 0000 000C while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000077 9b34      	SBIS 0x6,4
000078 cffe      	RJMP _0x3
                 ; 0000 000D ADCSRA|=(1<<ADIF);
000079 9a34      	SBI  0x6,4
                 ; 0000 000E return ADCW;
00007a b1e4      	IN   R30,0x4
00007b b1f5      	IN   R31,0x4+1
00007c c0eb      	RJMP _0x2080002
                 ; 0000 000F }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0013 int     a=0 ;
                 ; 0000 0014 float   Temperature ;
                 ; 0000 0015 char    Buffer_LCD[16];
                 ; 0000 0016 
                 ; 0000 0017 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007d 9764      	SBIW R28,20
                 ;	a -> R16,R17
                 ;	Temperature -> Y+16
                 ;	Buffer_LCD -> Y+0
                +
00007e e000     +LDI R16 , LOW ( 0 )
00007f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000080 e0e0      	LDI  R30,LOW(0)
000081 bbea      	OUT  0x1A,R30
                 ; 0000 0018 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000082 bbeb      	OUT  0x1B,R30
                 ; 0000 0019 
                 ; 0000 001A DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000083 efef      	LDI  R30,LOW(255)
000084 bbe4      	OUT  0x14,R30
                 ; 0000 001B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000085 e0e0      	LDI  R30,LOW(0)
000086 bbe5      	OUT  0x15,R30
                 ; 0000 001C 
                 ; 0000 001D ADMUX=ADC_VREF_TYPE;
000087 b9e7      	OUT  0x7,R30
                 ; 0000 001E ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
000088 e8e2      	LDI  R30,LOW(130)
000089 b9e6      	OUT  0x6,R30
                 ; 0000 001F SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
00008a e0e0      	LDI  R30,LOW(0)
00008b bfe0      	OUT  0x30,R30
                 ; 0000 0020 
                 ; 0000 0021 lcd_init(16);
00008c e1a0      	LDI  R26,LOW(16)
00008d d0af      	RCALL _lcd_init
                 ; 0000 0022 lcd_clear();
00008e d06b      	RCALL _lcd_clear
                 ; 0000 0023 
                 ; 0000 0024 while (1)
                 _0x6:
                 ; 0000 0025       {
                 ; 0000 0026       a=read_adc(0);
00008f e0a0      	LDI  R26,LOW(0)
000090 dfdf      	RCALL _read_adc
000091 018f      	MOVW R16,R30
                 ; 0000 0027       Temperature=(a/2.054) ;
000092 940e 0420 	CALL __CWD1
000094 940e 039d 	CALL __CDF1
000096 01df      	MOVW R26,R30
000097 01cb      	MOVW R24,R22
                +
000098 ebec     +LDI R30 , LOW ( 0x400374BC )
000099 e7f4     +LDI R31 , HIGH ( 0x400374BC )
00009a e063     +LDI R22 , BYTE3 ( 0x400374BC )
00009b e470     +LDI R23 , BYTE4 ( 0x400374BC )
                 	__GETD1N 0x400374BC
00009c 940e 03cb 	CALL __DIVF21
                +
00009e 8be8     +STD Y + 16 , R30
00009f 8bf9     +STD Y + 16 + 1 , R31
0000a0 8b6a     +STD Y + 16 + 2 , R22
0000a1 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
                 ; 0000 0028       sprintf(Buffer_LCD,"T=%3.1f",Temperature);
0000a2 01fe      	MOVW R30,R28
0000a3 93fa      	ST   -Y,R31
0000a4 93ea      	ST   -Y,R30
                +
0000a5 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000a6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000a7 93fa      	ST   -Y,R31
0000a8 93ea      	ST   -Y,R30
                +
0000a9 89ec     +LDD R30 , Y + 20
0000aa 89fd     +LDD R31 , Y + 20 + 1
0000ab 896e     +LDD R22 , Y + 20 + 2
0000ac 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
0000ad 940e 042d 	CALL __PUTPARD1
0000af e084      	LDI  R24,4
0000b0 940e 02de 	CALL _sprintf
0000b2 9628      	ADIW R28,8
                 ; 0000 0029       lcd_gotoxy(0,0);
0000b3 e0e0      	LDI  R30,LOW(0)
0000b4 93ea      	ST   -Y,R30
0000b5 e0a0      	LDI  R26,LOW(0)
0000b6 d036      	RCALL _lcd_gotoxy
                 ; 0000 002A       lcd_puts(Buffer_LCD);
0000b7 01de      	MOVW R26,R28
0000b8 d062      	RCALL _lcd_puts
                 ; 0000 002B       lcd_gotoxy(7,0);
0000b9 e0e7      	LDI  R30,LOW(7)
0000ba 93ea      	ST   -Y,R30
0000bb e0a0      	LDI  R26,LOW(0)
0000bc d030      	RCALL _lcd_gotoxy
                 ; 0000 002C       lcd_putsf("C");
                +
0000bd e6ae     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
0000be e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
0000bf d06a      	RCALL _lcd_putsf
                 ; 0000 002D       lcd_gotoxy(2,1);
0000c0 e0e2      	LDI  R30,LOW(2)
0000c1 93ea      	ST   -Y,R30
0000c2 e0a1      	LDI  R26,LOW(1)
0000c3 d029      	RCALL _lcd_gotoxy
                 ; 0000 002E       lcd_putsf("This is OK");
                +
0000c4 e7a0     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
0000c5 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
0000c6 d063      	RCALL _lcd_putsf
                 ; 0000 002F       delay_ms(500);
0000c7 efa4      	LDI  R26,LOW(500)
0000c8 e0b1      	LDI  R27,HIGH(500)
0000c9 940e 0364 	CALL _delay_ms
                 ; 0000 0030       }
0000cb cfc3      	RJMP _0x6
                 ; 0000 0031 }
                 _0x9:
0000cc cfff      	RJMP _0x9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000cd 93aa      	ST   -Y,R26
0000ce b3e5      	IN   R30,0x15
0000cf 70ef      	ANDI R30,LOW(0xF)
0000d0 2fae      	MOV  R26,R30
0000d1 81e8      	LD   R30,Y
0000d2 7fe0      	ANDI R30,LOW(0xF0)
0000d3 2bea      	OR   R30,R26
0000d4 bbe5      	OUT  0x15,R30
                +
0000d5 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000d6 958a     +DEC R24
0000d7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000d8 9aaa      	SBI  0x15,2
                +
0000d9 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000da 958a     +DEC R24
0000db f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000dc 98aa      	CBI  0x15,2
                +
0000dd e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000de 958a     +DEC R24
0000df f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000e0 c087      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000e1 93aa      	ST   -Y,R26
0000e2 81a8      	LD   R26,Y
0000e3 dfe9      	RCALL __lcd_write_nibble_G100
0000e4 81e8          ld    r30,y
0000e5 95e2          swap  r30
0000e6 83e8          st    y,r30
0000e7 81a8      	LD   R26,Y
0000e8 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000e9 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000ea 958a     +DEC R24
0000eb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000ec c07b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000ed 93aa      	ST   -Y,R26
0000ee 81e8      	LD   R30,Y
0000ef e0f0      	LDI  R31,0
0000f0 5ae0      	SUBI R30,LOW(-__base_y_G100)
0000f1 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000f2 81e0      	LD   R30,Z
0000f3 81a9      	LDD  R26,Y+1
0000f4 0fae      	ADD  R26,R30
0000f5 dfeb      	RCALL __lcd_write_data
0000f6 8059      	LDD  R5,Y+1
0000f7 8048      	LDD  R4,Y+0
0000f8 9622      	ADIW R28,2
0000f9 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000fa e0a2      	LDI  R26,LOW(2)
0000fb 940e 032b 	CALL SUBOPT_0x0
0000fd e0ac      	LDI  R26,LOW(12)
0000fe dfe2      	RCALL __lcd_write_data
0000ff e0a1      	LDI  R26,LOW(1)
000100 940e 032b 	CALL SUBOPT_0x0
000102 e0e0      	LDI  R30,LOW(0)
000103 2e4e      	MOV  R4,R30
000104 2e5e      	MOV  R5,R30
000105 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000106 93aa      	ST   -Y,R26
000107 81a8      	LD   R26,Y
000108 30aa      	CPI  R26,LOW(0xA)
000109 f011      	BREQ _0x2000005
00010a 1457      	CP   R5,R7
00010b f048      	BRLO _0x2000004
                 _0x2000005:
00010c e0e0      	LDI  R30,LOW(0)
00010d 93ea      	ST   -Y,R30
00010e 9443      	INC  R4
00010f 2da4      	MOV  R26,R4
000110 dfdc      	RCALL _lcd_gotoxy
000111 81a8      	LD   R26,Y
000112 30aa      	CPI  R26,LOW(0xA)
000113 f409      	BRNE _0x2000007
000114 c053      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000115 9453      	INC  R5
000116 9aa8      	SBI  0x15,0
000117 81a8      	LD   R26,Y
000118 dfc8      	RCALL __lcd_write_data
000119 98a8      	CBI  0x15,0
00011a c04d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00011b 93ba      	ST   -Y,R27
00011c 93aa      	ST   -Y,R26
00011d 931a      	ST   -Y,R17
                 _0x2000008:
00011e 81a9      	LDD  R26,Y+1
00011f 81ba      	LDD  R27,Y+1+1
000120 91ed      	LD   R30,X+
000121 83a9      	STD  Y+1,R26
000122 83ba      	STD  Y+1+1,R27
000123 2f1e      	MOV  R17,R30
000124 30e0      	CPI  R30,0
000125 f019      	BREQ _0x200000A
000126 2fa1      	MOV  R26,R17
000127 dfde      	RCALL _lcd_putchar
000128 cff5      	RJMP _0x2000008
                 _0x200000A:
000129 c010      	RJMP _0x2080003
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
00012a 93ba      	ST   -Y,R27
00012b 93aa      	ST   -Y,R26
00012c 931a      	ST   -Y,R17
                 _0x200000B:
00012d 81e9      	LDD  R30,Y+1
00012e 81fa      	LDD  R31,Y+1+1
00012f 9631      	ADIW R30,1
000130 83e9      	STD  Y+1,R30
000131 83fa      	STD  Y+1+1,R31
000132 9731      	SBIW R30,1
000133 91e4      	LPM  R30,Z
000134 2f1e      	MOV  R17,R30
000135 30e0      	CPI  R30,0
000136 f019      	BREQ _0x200000D
000137 2fa1      	MOV  R26,R17
000138 dfcd      	RCALL _lcd_putchar
000139 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080003:
00013a 8118      	LDD  R17,Y+0
00013b 9623      	ADIW R28,3
00013c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00013d 93aa      	ST   -Y,R26
00013e b3e4      	IN   R30,0x14
00013f 6fe0      	ORI  R30,LOW(0xF0)
000140 bbe4      	OUT  0x14,R30
000141 9aa2      	SBI  0x14,2
000142 9aa0      	SBI  0x14,0
000143 9aa1      	SBI  0x14,1
000144 98aa      	CBI  0x15,2
000145 98a8      	CBI  0x15,0
000146 98a9      	CBI  0x15,1
000147 8078      	LDD  R7,Y+0
000148 81e8      	LD   R30,Y
000149 58e0      	SUBI R30,-LOW(128)
                +
00014a 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00014c 81e8      	LD   R30,Y
00014d 54e0      	SUBI R30,-LOW(192)
                +
00014e 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000150 e1a4      	LDI  R26,LOW(20)
000151 e0b0      	LDI  R27,0
000152 940e 0364 	CALL _delay_ms
000154 940e 0331 	CALL SUBOPT_0x1
000156 940e 0331 	CALL SUBOPT_0x1
000158 940e 0331 	CALL SUBOPT_0x1
00015a e2a0      	LDI  R26,LOW(32)
00015b df71      	RCALL __lcd_write_nibble_G100
                +
00015c e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00015d 958a     +DEC R24
00015e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00015f e2a8      	LDI  R26,LOW(40)
000160 df80      	RCALL __lcd_write_data
000161 e0a4      	LDI  R26,LOW(4)
000162 df7e      	RCALL __lcd_write_data
000163 e8a5      	LDI  R26,LOW(133)
000164 df7c      	RCALL __lcd_write_data
000165 e0a6      	LDI  R26,LOW(6)
000166 df7a      	RCALL __lcd_write_data
000167 df92      	RCALL _lcd_clear
                 _0x2080002:
000168 9621      	ADIW R28,1
000169 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00016a 93ba      	ST   -Y,R27
00016b 93aa      	ST   -Y,R26
00016c 931a      	ST   -Y,R17
00016d 930a      	ST   -Y,R16
00016e 81aa      	LDD  R26,Y+2
00016f 81bb      	LDD  R27,Y+2+1
000170 9612      	ADIW R26,2
000171 940e 0425 	CALL __GETW1P
000173 9730      	SBIW R30,0
000174 f159      	BREQ _0x2020010
000175 81aa      	LDD  R26,Y+2
000176 81bb      	LDD  R27,Y+2+1
000177 9614      	ADIW R26,4
000178 940e 0425 	CALL __GETW1P
00017a 018f      	MOVW R16,R30
00017b 9730      	SBIW R30,0
00017c f061      	BREQ _0x2020012
                +
00017d 3002     +CPI R16 , LOW ( 2 )
00017e e0e0     +LDI R30 , HIGH ( 2 )
00017f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000180 f098      	BRLO _0x2020013
000181 01f8      	MOVW R30,R16
000182 9731      	SBIW R30,1
000183 018f      	MOVW R16,R30
                +
000184 81aa     +LDD R26 , Y + 2
000185 81bb     +LDD R27 , Y + 2 + 1
000186 9614     +ADIW R26 , 4
000187 93ed     +ST X + , R30
000188 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000189 81aa      	LDD  R26,Y+2
00018a 81bb      	LDD  R27,Y+2+1
00018b 9612      	ADIW R26,2
00018c 91ed      	LD   R30,X+
00018d 91fd      	LD   R31,X+
00018e 9631      	ADIW R30,1
00018f 93fe      	ST   -X,R31
000190 93ee      	ST   -X,R30
000191 9731      	SBIW R30,1
000192 81ac      	LDD  R26,Y+4
000193 83a0      	STD  Z+0,R26
                 _0x2020013:
000194 81aa      	LDD  R26,Y+2
000195 81bb      	LDD  R27,Y+2+1
000196 940e 0425 	CALL __GETW1P
000198 23ff      	TST  R31
000199 f02a      	BRMI _0x2020014
00019a 91ed      	LD   R30,X+
00019b 91fd      	LD   R31,X+
00019c 9631      	ADIW R30,1
00019d 93fe      	ST   -X,R31
00019e 93ee      	ST   -X,R30
                 _0x2020014:
00019f c006      	RJMP _0x2020015
                 _0x2020010:
0001a0 81aa      	LDD  R26,Y+2
0001a1 81bb      	LDD  R27,Y+2+1
0001a2 efef      	LDI  R30,LOW(65535)
0001a3 efff      	LDI  R31,HIGH(65535)
0001a4 93ed      	ST   X+,R30
0001a5 93fc      	ST   X,R31
                 _0x2020015:
0001a6 8119      	LDD  R17,Y+1
0001a7 8108      	LDD  R16,Y+0
0001a8 9625      	ADIW R28,5
0001a9 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001aa 93ba      	ST   -Y,R27
0001ab 93aa      	ST   -Y,R26
0001ac 9726      	SBIW R28,6
0001ad 940e 0432 	CALL __SAVELOCR6
0001af e010      	LDI  R17,0
0001b0 85ac      	LDD  R26,Y+12
0001b1 85bd      	LDD  R27,Y+12+1
0001b2 e0e0      	LDI  R30,LOW(0)
0001b3 e0f0      	LDI  R31,HIGH(0)
0001b4 93ed      	ST   X+,R30
0001b5 93fc      	ST   X,R31
                 _0x2020016:
0001b6 89ea      	LDD  R30,Y+18
0001b7 89fb      	LDD  R31,Y+18+1
0001b8 9631      	ADIW R30,1
0001b9 8bea      	STD  Y+18,R30
0001ba 8bfb      	STD  Y+18+1,R31
0001bb 9731      	SBIW R30,1
0001bc 91e4      	LPM  R30,Z
0001bd 2f2e      	MOV  R18,R30
0001be 30e0      	CPI  R30,0
0001bf f409      	BRNE PC+2
0001c0 c115      	RJMP _0x2020018
0001c1 2fe1      	MOV  R30,R17
0001c2 30e0      	CPI  R30,0
0001c3 f439      	BRNE _0x202001C
0001c4 3225      	CPI  R18,37
0001c5 f411      	BRNE _0x202001D
0001c6 e011      	LDI  R17,LOW(1)
0001c7 c002      	RJMP _0x202001E
                 _0x202001D:
0001c8 940e 0338 	CALL SUBOPT_0x2
                 _0x202001E:
0001ca c10a      	RJMP _0x202001B
                 _0x202001C:
0001cb 30e1      	CPI  R30,LOW(0x1)
0001cc f4a9      	BRNE _0x202001F
0001cd 3225      	CPI  R18,37
0001ce f419      	BRNE _0x2020020
0001cf 940e 0338 	CALL SUBOPT_0x2
0001d1 c102      	RJMP _0x20200CC
                 _0x2020020:
0001d2 e012      	LDI  R17,LOW(2)
0001d3 e040      	LDI  R20,LOW(0)
0001d4 e000      	LDI  R16,LOW(0)
0001d5 322d      	CPI  R18,45
0001d6 f411      	BRNE _0x2020021
0001d7 e001      	LDI  R16,LOW(1)
0001d8 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001d9 322b      	CPI  R18,43
0001da f411      	BRNE _0x2020022
0001db e24b      	LDI  R20,LOW(43)
0001dc c0f8      	RJMP _0x202001B
                 _0x2020022:
0001dd 3220      	CPI  R18,32
0001de f411      	BRNE _0x2020023
0001df e240      	LDI  R20,LOW(32)
0001e0 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001e1 c002      	RJMP _0x2020024
                 _0x202001F:
0001e2 30e2      	CPI  R30,LOW(0x2)
0001e3 f439      	BRNE _0x2020025
                 _0x2020024:
0001e4 e050      	LDI  R21,LOW(0)
0001e5 e013      	LDI  R17,LOW(3)
0001e6 3320      	CPI  R18,48
0001e7 f411      	BRNE _0x2020026
0001e8 6800      	ORI  R16,LOW(128)
0001e9 c0eb      	RJMP _0x202001B
                 _0x2020026:
0001ea c003      	RJMP _0x2020027
                 _0x2020025:
0001eb 30e3      	CPI  R30,LOW(0x3)
0001ec f009      	BREQ PC+2
0001ed c0e7      	RJMP _0x202001B
                 _0x2020027:
0001ee 3320      	CPI  R18,48
0001ef f010      	BRLO _0x202002A
0001f0 332a      	CPI  R18,58
0001f1 f008      	BRLO _0x202002B
                 _0x202002A:
0001f2 c007      	RJMP _0x2020029
                 _0x202002B:
0001f3 e0aa      	LDI  R26,LOW(10)
0001f4 9f5a      	MUL  R21,R26
0001f5 2d50      	MOV  R21,R0
0001f6 2fe2      	MOV  R30,R18
0001f7 53e0      	SUBI R30,LOW(48)
0001f8 0f5e      	ADD  R21,R30
0001f9 c0db      	RJMP _0x202001B
                 _0x2020029:
0001fa 2fe2      	MOV  R30,R18
0001fb 36e3      	CPI  R30,LOW(0x63)
0001fc f449      	BRNE _0x202002F
0001fd 940e 033f 	CALL SUBOPT_0x3
0001ff 89e8      	LDD  R30,Y+16
000200 89f9      	LDD  R31,Y+16+1
000201 81a4      	LDD  R26,Z+4
000202 93aa      	ST   -Y,R26
000203 940e 0345 	CALL SUBOPT_0x4
000205 c0ce      	RJMP _0x2020030
                 _0x202002F:
000206 37e3      	CPI  R30,LOW(0x73)
000207 f441      	BRNE _0x2020032
000208 940e 033f 	CALL SUBOPT_0x3
00020a 940e 034b 	CALL SUBOPT_0x5
00020c 940e 0312 	CALL _strlen
00020e 2f1e      	MOV  R17,R30
00020f c00a      	RJMP _0x2020033
                 _0x2020032:
000210 37e0      	CPI  R30,LOW(0x70)
000211 f461      	BRNE _0x2020035
000212 940e 033f 	CALL SUBOPT_0x3
000214 940e 034b 	CALL SUBOPT_0x5
000216 940e 031e 	CALL _strlenf
000218 2f1e      	MOV  R17,R30
000219 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00021a 6002      	ORI  R16,LOW(2)
00021b 770f      	ANDI R16,LOW(127)
00021c e030      	LDI  R19,LOW(0)
00021d c034      	RJMP _0x2020036
                 _0x2020035:
00021e 36e4      	CPI  R30,LOW(0x64)
00021f f011      	BREQ _0x2020039
000220 36e9      	CPI  R30,LOW(0x69)
000221 f411      	BRNE _0x202003A
                 _0x2020039:
000222 6004      	ORI  R16,LOW(4)
000223 c002      	RJMP _0x202003B
                 _0x202003A:
000224 37e5      	CPI  R30,LOW(0x75)
000225 f431      	BRNE _0x202003C
                 _0x202003B:
000226 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000227 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000228 83ee      	STD  Y+6,R30
000229 83ff      	STD  Y+6+1,R31
00022a e015      	LDI  R17,LOW(5)
00022b c00c      	RJMP _0x202003D
                 _0x202003C:
00022c 35e8      	CPI  R30,LOW(0x58)
00022d f411      	BRNE _0x202003F
00022e 6008      	ORI  R16,LOW(8)
00022f c003      	RJMP _0x2020040
                 _0x202003F:
000230 37e8      	CPI  R30,LOW(0x78)
000231 f009      	BREQ PC+2
000232 c0a1      	RJMP _0x2020071
                 _0x2020040:
000233 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000234 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000235 83ee      	STD  Y+6,R30
000236 83ff      	STD  Y+6+1,R31
000237 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000238 ff02      	SBRS R16,2
000239 c014      	RJMP _0x2020042
00023a 940e 033f 	CALL SUBOPT_0x3
00023c 940e 0355 	CALL SUBOPT_0x6
00023e 85ab      	LDD  R26,Y+11
00023f 23aa      	TST  R26
000240 f43a      	BRPL _0x2020043
000241 85ea      	LDD  R30,Y+10
000242 85fb      	LDD  R31,Y+10+1
000243 940e 0414 	CALL __ANEGW1
000245 87ea      	STD  Y+10,R30
000246 87fb      	STD  Y+10+1,R31
000247 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000248 3040      	CPI  R20,0
000249 f011      	BREQ _0x2020044
00024a 5f1f      	SUBI R17,-LOW(1)
00024b c001      	RJMP _0x2020045
                 _0x2020044:
00024c 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00024d c004      	RJMP _0x2020046
                 _0x2020042:
00024e 940e 033f 	CALL SUBOPT_0x3
000250 940e 0355 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000252 fd00      	SBRC R16,0
000253 c011      	RJMP _0x2020047
                 _0x2020048:
000254 1715      	CP   R17,R21
000255 f478      	BRSH _0x202004A
000256 ff07      	SBRS R16,7
000257 c008      	RJMP _0x202004B
000258 ff02      	SBRS R16,2
000259 c004      	RJMP _0x202004C
00025a 7f0b      	ANDI R16,LOW(251)
00025b 2f24      	MOV  R18,R20
00025c 5011      	SUBI R17,LOW(1)
00025d c001      	RJMP _0x202004D
                 _0x202004C:
00025e e320      	LDI  R18,LOW(48)
                 _0x202004D:
00025f c001      	RJMP _0x202004E
                 _0x202004B:
000260 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000261 940e 0338 	CALL SUBOPT_0x2
000263 5051      	SUBI R21,LOW(1)
000264 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000265 2f31      	MOV  R19,R17
000266 ff01      	SBRS R16,1
000267 c017      	RJMP _0x202004F
                 _0x2020050:
000268 3030      	CPI  R19,0
000269 f0a1      	BREQ _0x2020052
00026a ff03      	SBRS R16,3
00026b c006      	RJMP _0x2020053
00026c 81ee      	LDD  R30,Y+6
00026d 81ff      	LDD  R31,Y+6+1
00026e 9125      	LPM  R18,Z+
00026f 83ee      	STD  Y+6,R30
000270 83ff      	STD  Y+6+1,R31
000271 c005      	RJMP _0x2020054
                 _0x2020053:
000272 81ae      	LDD  R26,Y+6
000273 81bf      	LDD  R27,Y+6+1
000274 912d      	LD   R18,X+
000275 83ae      	STD  Y+6,R26
000276 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000277 940e 0338 	CALL SUBOPT_0x2
000279 3050      	CPI  R21,0
00027a f009      	BREQ _0x2020055
00027b 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00027c 5031      	SUBI R19,LOW(1)
00027d cfea      	RJMP _0x2020050
                 _0x2020052:
00027e c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00027f e320      	LDI  R18,LOW(48)
000280 81ee      	LDD  R30,Y+6
000281 81ff      	LDD  R31,Y+6+1
000282 940e 0429 	CALL __GETW1PF
000284 87e8      	STD  Y+8,R30
000285 87f9      	STD  Y+8+1,R31
000286 81ee      	LDD  R30,Y+6
000287 81ff      	LDD  R31,Y+6+1
000288 9632      	ADIW R30,2
000289 83ee      	STD  Y+6,R30
00028a 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00028b 85e8      	LDD  R30,Y+8
00028c 85f9      	LDD  R31,Y+8+1
00028d 85aa      	LDD  R26,Y+10
00028e 85bb      	LDD  R27,Y+10+1
00028f 17ae      	CP   R26,R30
000290 07bf      	CPC  R27,R31
000291 f050      	BRLO _0x202005C
000292 5f2f      	SUBI R18,-LOW(1)
000293 85a8      	LDD  R26,Y+8
000294 85b9      	LDD  R27,Y+8+1
000295 85ea      	LDD  R30,Y+10
000296 85fb      	LDD  R31,Y+10+1
000297 1bea      	SUB  R30,R26
000298 0bfb      	SBC  R31,R27
000299 87ea      	STD  Y+10,R30
00029a 87fb      	STD  Y+10+1,R31
00029b cfef      	RJMP _0x202005A
                 _0x202005C:
00029c 332a      	CPI  R18,58
00029d f028      	BRLO _0x202005D
00029e ff03      	SBRS R16,3
00029f c002      	RJMP _0x202005E
0002a0 5f29      	SUBI R18,-LOW(7)
0002a1 c001      	RJMP _0x202005F
                 _0x202005E:
0002a2 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002a3 fd04      	SBRC R16,4
0002a4 c01a      	RJMP _0x2020061
0002a5 3321      	CPI  R18,49
0002a6 f420      	BRSH _0x2020063
0002a7 85a8      	LDD  R26,Y+8
0002a8 85b9      	LDD  R27,Y+8+1
0002a9 9711      	SBIW R26,1
0002aa f409      	BRNE _0x2020062
                 _0x2020063:
0002ab c009      	RJMP _0x20200CD
                 _0x2020062:
0002ac 1753      	CP   R21,R19
0002ad f010      	BRLO _0x2020067
0002ae ff00      	SBRS R16,0
0002af c001      	RJMP _0x2020068
                 _0x2020067:
0002b0 c013      	RJMP _0x2020066
                 _0x2020068:
0002b1 e220      	LDI  R18,LOW(32)
0002b2 ff07      	SBRS R16,7
0002b3 c00b      	RJMP _0x2020069
0002b4 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002b5 6100      	ORI  R16,LOW(16)
0002b6 ff02      	SBRS R16,2
0002b7 c007      	RJMP _0x202006A
0002b8 7f0b      	ANDI R16,LOW(251)
0002b9 934a      	ST   -Y,R20
0002ba 940e 0345 	CALL SUBOPT_0x4
0002bc 3050      	CPI  R21,0
0002bd f009      	BREQ _0x202006B
0002be 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002bf 940e 0338 	CALL SUBOPT_0x2
0002c1 3050      	CPI  R21,0
0002c2 f009      	BREQ _0x202006C
0002c3 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002c4 5031      	SUBI R19,LOW(1)
0002c5 85a8      	LDD  R26,Y+8
0002c6 85b9      	LDD  R27,Y+8+1
0002c7 9712      	SBIW R26,2
0002c8 f008      	BRLO _0x2020059
0002c9 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002ca ff00      	SBRS R16,0
0002cb c008      	RJMP _0x202006D
                 _0x202006E:
0002cc 3050      	CPI  R21,0
0002cd f031      	BREQ _0x2020070
0002ce 5051      	SUBI R21,LOW(1)
0002cf e2e0      	LDI  R30,LOW(32)
0002d0 93ea      	ST   -Y,R30
0002d1 940e 0345 	CALL SUBOPT_0x4
0002d3 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002d4 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002d5 cee0      	RJMP _0x2020016
                 _0x2020018:
0002d6 85ac      	LDD  R26,Y+12
0002d7 85bd      	LDD  R27,Y+12+1
0002d8 940e 0425 	CALL __GETW1P
0002da 940e 0439 	CALL __LOADLOCR6
0002dc 9664      	ADIW R28,20
0002dd 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002de 92ff      	PUSH R15
0002df 2ef8      	MOV  R15,R24
0002e0 9726      	SBIW R28,6
0002e1 940e 0434 	CALL __SAVELOCR4
0002e3 940e 035d 	CALL SUBOPT_0x7
0002e5 9730      	SBIW R30,0
0002e6 f419      	BRNE _0x2020072
0002e7 efef      	LDI  R30,LOW(65535)
0002e8 efff      	LDI  R31,HIGH(65535)
0002e9 c023      	RJMP _0x2080001
                 _0x2020072:
0002ea 01de      	MOVW R26,R28
0002eb 9616      	ADIW R26,6
0002ec 940e 0410 	CALL __ADDW2R15
0002ee 018d      	MOVW R16,R26
0002ef 940e 035d 	CALL SUBOPT_0x7
0002f1 83ee      	STD  Y+6,R30
0002f2 83ff      	STD  Y+6+1,R31
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 87e8      	STD  Y+8,R30
0002f5 87e9      	STD  Y+8+1,R30
0002f6 01de      	MOVW R26,R28
0002f7 961a      	ADIW R26,10
0002f8 940e 0410 	CALL __ADDW2R15
0002fa 940e 0425 	CALL __GETW1P
0002fc 93fa      	ST   -Y,R31
0002fd 93ea      	ST   -Y,R30
0002fe 931a      	ST   -Y,R17
0002ff 930a      	ST   -Y,R16
000300 e6ea      	LDI  R30,LOW(_put_buff_G101)
000301 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 01de      	MOVW R26,R28
000305 961a      	ADIW R26,10
000306 dea3      	RCALL __print_G101
000307 019f      	MOVW R18,R30
000308 81ae      	LDD  R26,Y+6
000309 81bf      	LDD  R27,Y+6+1
00030a e0e0      	LDI  R30,LOW(0)
00030b 93ec      	ST   X,R30
00030c 01f9      	MOVW R30,R18
                 _0x2080001:
00030d 940e 043b 	CALL __LOADLOCR4
00030f 962a      	ADIW R28,10
000310 90ff      	POP  R15
000311 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000312 93ba      	ST   -Y,R27
000313 93aa      	ST   -Y,R26
000314 91a9          ld   r26,y+
000315 91b9          ld   r27,y+
000316 27ee          clr  r30
000317 27ff          clr  r31
                 strlen0:
000318 916d          ld   r22,x+
000319 2366          tst  r22
00031a f011          breq strlen1
00031b 9631          adiw r30,1
00031c cffb          rjmp strlen0
                 strlen1:
00031d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00031e 93ba      	ST   -Y,R27
00031f 93aa      	ST   -Y,R26
000320 27aa          clr  r26
000321 27bb          clr  r27
000322 91e9          ld   r30,y+
000323 91f9          ld   r31,y+
                 strlenf0:
000324 9005      	lpm  r0,z+
000325 2000          tst  r0
000326 f011          breq strlenf1
000327 9611          adiw r26,1
000328 cffb          rjmp strlenf0
                 strlenf1:
000329 01fd          movw r30,r26
00032a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00032b 940e 00e1 	CALL __lcd_write_data
00032d e0a3      	LDI  R26,LOW(3)
00032e e0b0      	LDI  R27,0
00032f 940c 0364 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000331 e3a0      	LDI  R26,LOW(48)
000332 940e 00cd 	CALL __lcd_write_nibble_G100
                +
000334 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000335 958a     +DEC R24
000336 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000337 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000338 932a      	ST   -Y,R18
000339 85ad      	LDD  R26,Y+13
00033a 85be      	LDD  R27,Y+13+1
00033b 85ef      	LDD  R30,Y+15
00033c 89f8      	LDD  R31,Y+15+1
00033d 9509      	ICALL
00033e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
00033f 89e8      	LDD  R30,Y+16
000340 89f9      	LDD  R31,Y+16+1
000341 9734      	SBIW R30,4
000342 8be8      	STD  Y+16,R30
000343 8bf9      	STD  Y+16+1,R31
000344 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000345 85ad      	LDD  R26,Y+13
000346 85be      	LDD  R27,Y+13+1
000347 85ef      	LDD  R30,Y+15
000348 89f8      	LDD  R31,Y+15+1
000349 9509      	ICALL
00034a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
00034b 89a8      	LDD  R26,Y+16
00034c 89b9      	LDD  R27,Y+16+1
00034d 9614      	ADIW R26,4
00034e 940e 0425 	CALL __GETW1P
000350 83ee      	STD  Y+6,R30
000351 83ff      	STD  Y+6+1,R31
000352 81ae      	LDD  R26,Y+6
000353 81bf      	LDD  R27,Y+6+1
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000355 89a8      	LDD  R26,Y+16
000356 89b9      	LDD  R27,Y+16+1
000357 9614      	ADIW R26,4
000358 940e 0425 	CALL __GETW1P
00035a 87ea      	STD  Y+10,R30
00035b 87fb      	STD  Y+10+1,R31
00035c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00035d 01de      	MOVW R26,R28
00035e 961c      	ADIW R26,12
00035f 940e 0410 	CALL __ADDW2R15
000361 940e 0425 	CALL __GETW1P
000363 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000364 9610      	adiw r26,0
000365 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000366 ef8a     +LDI R24 , LOW ( 0xFA )
000367 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000368 9701     +SBIW R24 , 1
000369 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00036a 95a8      	wdr
00036b 9711      	sbiw r26,1
00036c f7c9      	brne __delay_ms0
                 __delay_ms1:
00036d 9508      	ret
                 
                 __ROUND_REPACK:
00036e 2355      	TST  R21
00036f f442      	BRPL __REPACK
000370 3850      	CPI  R21,0x80
000371 f411      	BRNE __ROUND_REPACK0
000372 ffe0      	SBRS R30,0
000373 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000374 9631      	ADIW R30,1
000375 1f69      	ADC  R22,R25
000376 1f79      	ADC  R23,R25
000377 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000378 e850      	LDI  R21,0x80
000379 2757      	EOR  R21,R23
00037a f411      	BRNE __REPACK0
00037b 935f      	PUSH R21
00037c c03c      	RJMP __ZERORES
                 __REPACK0:
00037d 3f5f      	CPI  R21,0xFF
00037e f031      	BREQ __REPACK1
00037f 0f66      	LSL  R22
000380 0c00      	LSL  R0
000381 9557      	ROR  R21
000382 9567      	ROR  R22
000383 2f75      	MOV  R23,R21
000384 9508      	RET
                 __REPACK1:
000385 935f      	PUSH R21
000386 2000      	TST  R0
000387 f00a      	BRMI __REPACK2
000388 c03c      	RJMP __MAXRES
                 __REPACK2:
000389 c035      	RJMP __MINRES
                 
                 __UNPACK:
00038a e850      	LDI  R21,0x80
00038b 2e19      	MOV  R1,R25
00038c 2215      	AND  R1,R21
00038d 0f88      	LSL  R24
00038e 1f99      	ROL  R25
00038f 2795      	EOR  R25,R21
000390 0f55      	LSL  R21
000391 9587      	ROR  R24
                 
                 __UNPACK1:
000392 e850      	LDI  R21,0x80
000393 2e07      	MOV  R0,R23
000394 2205      	AND  R0,R21
000395 0f66      	LSL  R22
000396 1f77      	ROL  R23
000397 2775      	EOR  R23,R21
000398 0f55      	LSL  R21
000399 9567      	ROR  R22
00039a 9508      	RET
                 
                 __CDF1U:
00039b 9468      	SET
00039c c001      	RJMP __CDF1U0
                 __CDF1:
00039d 94e8      	CLT
                 __CDF1U0:
00039e 9730      	SBIW R30,0
00039f 4060      	SBCI R22,0
0003a0 4070      	SBCI R23,0
0003a1 f0b1      	BREQ __CDF10
0003a2 2400      	CLR  R0
0003a3 f026      	BRTS __CDF11
0003a4 2377      	TST  R23
0003a5 f412      	BRPL __CDF11
0003a6 9400      	COM  R0
0003a7 d070      	RCALL __ANEGD1
                 __CDF11:
0003a8 2e17      	MOV  R1,R23
0003a9 e17e      	LDI  R23,30
0003aa 2011      	TST  R1
                 __CDF12:
0003ab f032      	BRMI __CDF13
0003ac 957a      	DEC  R23
0003ad 0fee      	LSL  R30
0003ae 1fff      	ROL  R31
0003af 1f66      	ROL  R22
0003b0 1c11      	ROL  R1
0003b1 cff9      	RJMP __CDF12
                 __CDF13:
0003b2 2fef      	MOV  R30,R31
0003b3 2ff6      	MOV  R31,R22
0003b4 2d61      	MOV  R22,R1
0003b5 935f      	PUSH R21
0003b6 dfc1      	RCALL __REPACK
0003b7 915f      	POP  R21
                 __CDF10:
0003b8 9508      	RET
                 
                 __ZERORES:
0003b9 27ee      	CLR  R30
0003ba 27ff      	CLR  R31
0003bb 2766      	CLR  R22
0003bc 2777      	CLR  R23
0003bd 915f      	POP  R21
0003be 9508      	RET
                 
                 __MINRES:
0003bf efef      	SER  R30
0003c0 efff      	SER  R31
0003c1 e76f      	LDI  R22,0x7F
0003c2 ef7f      	SER  R23
0003c3 915f      	POP  R21
0003c4 9508      	RET
                 
                 __MAXRES:
0003c5 efef      	SER  R30
0003c6 efff      	SER  R31
0003c7 e76f      	LDI  R22,0x7F
0003c8 e77f      	LDI  R23,0x7F
0003c9 915f      	POP  R21
0003ca 9508      	RET
                 
                 __DIVF21:
0003cb 935f      	PUSH R21
0003cc dfbd      	RCALL __UNPACK
0003cd 3870      	CPI  R23,0x80
0003ce f421      	BRNE __DIVF210
0003cf 2011      	TST  R1
                 __DIVF211:
0003d0 f40a      	BRPL __DIVF219
0003d1 cfed      	RJMP __MINRES
                 __DIVF219:
0003d2 cff2      	RJMP __MAXRES
                 __DIVF210:
0003d3 3890      	CPI  R25,0x80
0003d4 f409      	BRNE __DIVF218
                 __DIVF217:
0003d5 cfe3      	RJMP __ZERORES
                 __DIVF218:
0003d6 2401      	EOR  R0,R1
0003d7 9408      	SEC
0003d8 0b97      	SBC  R25,R23
0003d9 f41b      	BRVC __DIVF216
0003da f3d4      	BRLT __DIVF217
0003db 2000      	TST  R0
0003dc cff3      	RJMP __DIVF211
                 __DIVF216:
0003dd 2f79      	MOV  R23,R25
0003de 931f      	PUSH R17
0003df 932f      	PUSH R18
0003e0 933f      	PUSH R19
0003e1 934f      	PUSH R20
0003e2 2411      	CLR  R1
0003e3 2711      	CLR  R17
0003e4 2722      	CLR  R18
0003e5 2733      	CLR  R19
0003e6 2744      	CLR  R20
0003e7 2755      	CLR  R21
0003e8 e290      	LDI  R25,32
                 __DIVF212:
0003e9 17ae      	CP   R26,R30
0003ea 07bf      	CPC  R27,R31
0003eb 0786      	CPC  R24,R22
0003ec 0741      	CPC  R20,R17
0003ed f030      	BRLO __DIVF213
0003ee 1bae      	SUB  R26,R30
0003ef 0bbf      	SBC  R27,R31
0003f0 0b86      	SBC  R24,R22
0003f1 0b41      	SBC  R20,R17
0003f2 9408      	SEC
0003f3 c001      	RJMP __DIVF214
                 __DIVF213:
0003f4 9488      	CLC
                 __DIVF214:
0003f5 1f55      	ROL  R21
0003f6 1f22      	ROL  R18
0003f7 1f33      	ROL  R19
0003f8 1c11      	ROL  R1
0003f9 1faa      	ROL  R26
0003fa 1fbb      	ROL  R27
0003fb 1f88      	ROL  R24
0003fc 1f44      	ROL  R20
0003fd 959a      	DEC  R25
0003fe f751      	BRNE __DIVF212
0003ff 01f9      	MOVW R30,R18
000400 2d61      	MOV  R22,R1
000401 914f      	POP  R20
000402 913f      	POP  R19
000403 912f      	POP  R18
000404 911f      	POP  R17
000405 2366      	TST  R22
000406 f032      	BRMI __DIVF215
000407 0f55      	LSL  R21
000408 1fee      	ROL  R30
000409 1fff      	ROL  R31
00040a 1f66      	ROL  R22
00040b 957a      	DEC  R23
00040c f243      	BRVS __DIVF217
                 __DIVF215:
00040d df60      	RCALL __ROUND_REPACK
00040e 915f      	POP  R21
00040f 9508      	RET
                 
                 __ADDW2R15:
000410 2400      	CLR  R0
000411 0daf      	ADD  R26,R15
000412 1db0      	ADC  R27,R0
000413 9508      	RET
                 
                 __ANEGW1:
000414 95f1      	NEG  R31
000415 95e1      	NEG  R30
000416 40f0      	SBCI R31,0
000417 9508      	RET
                 
                 __ANEGD1:
000418 95f0      	COM  R31
000419 9560      	COM  R22
00041a 9570      	COM  R23
00041b 95e1      	NEG  R30
00041c 4fff      	SBCI R31,-1
00041d 4f6f      	SBCI R22,-1
00041e 4f7f      	SBCI R23,-1
00041f 9508      	RET
                 
                 __CWD1:
000420 2f6f      	MOV  R22,R31
000421 0f66      	ADD  R22,R22
000422 0b66      	SBC  R22,R22
000423 2f76      	MOV  R23,R22
000424 9508      	RET
                 
                 __GETW1P:
000425 91ed      	LD   R30,X+
000426 91fc      	LD   R31,X
000427 9711      	SBIW R26,1
000428 9508      	RET
                 
                 __GETW1PF:
000429 9005      	LPM  R0,Z+
00042a 91f4      	LPM  R31,Z
00042b 2de0      	MOV  R30,R0
00042c 9508      	RET
                 
                 __PUTPARD1:
00042d 937a      	ST   -Y,R23
00042e 936a      	ST   -Y,R22
00042f 93fa      	ST   -Y,R31
000430 93ea      	ST   -Y,R30
000431 9508      	RET
                 
                 __SAVELOCR6:
000432 935a      	ST   -Y,R21
                 __SAVELOCR5:
000433 934a      	ST   -Y,R20
                 __SAVELOCR4:
000434 933a      	ST   -Y,R19
                 __SAVELOCR3:
000435 932a      	ST   -Y,R18
                 __SAVELOCR2:
000436 931a      	ST   -Y,R17
000437 930a      	ST   -Y,R16
000438 9508      	RET
                 
                 __LOADLOCR6:
000439 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00043a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00043b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00043c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00043d 8119      	LDD  R17,Y+1
00043e 8108      	LD   R16,Y
00043f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  19 r1 :  12 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  36 r17:  33 r18:  34 r19:  12 r20:  15 r21:  44 r22:  34 r23:  25 
r24:  31 r25:  13 r26: 110 r27:  43 r28:  17 r29:   1 r30: 190 r31:  74 
x  :  23 y  : 185 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   4 
adiw  :  26 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  20 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   1 brmi  :   4 brne  :  36 brpl  :   4 brsh  :   2 brtc  :   0 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :  52 
cbi   :   5 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :  18 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   4 
cp    :   5 cpc   :   5 cpi   :  38 cpse  :   0 dec   :  11 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  23 ld    :  26 ldd   :  83 ldi   : 110 
lds   :   0 lpm   :  16 lsl   :   8 lsr   :   0 mov   :  30 movw  :  20 
mul   :   1 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   7 out   :  16 pop   :  10 push  :   9 rcall :  28 ret   :  33 
reti  :   0 rjmp  :  74 rol   :  16 ror   :   4 sbc   :   6 sbci  :   7 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  11 sec   :   2 seh   :   0 sei   :   0 sen   :   0 ser   :   5 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  65 std   :  37 sts   :   2 sub   :   2 subi  :  16 swap  :   1 
tst   :  11 wdr   :   1 
Instructions used: 68 out of 116 (58.6%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000880   2126     50   2176   16384  13.3%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
