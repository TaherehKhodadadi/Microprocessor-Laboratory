
AVRASM ver. 2.1.30  D:\Microprocessor-Laboratory\EX6\part2\code\Debug\List\partb.asm Fri Nov 05 19:39:27 2021

D:\Microprocessor-Laboratory\EX6\part2\code\Debug\List\partb.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\Microprocessor-Laboratory\EX6\part2\code\Debug\List\partb.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\Microprocessor-Laboratory\EX6\part2\code\Debug\List\partb.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3d54
000034 3325
000035 312e
000036 0066      	.DB  0x54,0x3D,0x25,0x33,0x2E,0x31,0x66,0x0
000037 0043
000038 6f43
000039 6c6f
00003a 7265      	.DB  0x43,0x0,0x43,0x6F,0x6F,0x6C,0x65,0x72
00003b 2d2d
00003c 203e
00003d 464f
00003e 0046      	.DB  0x2D,0x2D,0x3E,0x20,0x4F,0x46,0x46,0x0
00003f 6f43
000040 6c6f
000041 7265
000042 2d2d      	.DB  0x43,0x6F,0x6F,0x6C,0x65,0x72,0x2D,0x2D
000043 203e
000044 4f20
000045 004e      	.DB  0x3E,0x20,0x20,0x4F,0x4E,0x0
                 _0x2000003:
000046 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000047 0002      	.DW  0x02
000048 0160      	.DW  __base_y_G100
000049 008c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004b 94f8      	CLI
00004c 27ee      	CLR  R30
00004d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004e e0f1      	LDI  R31,1
00004f bffb      	OUT  GICR,R31
000050 bfeb      	OUT  GICR,R30
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000052 e08d      	LDI  R24,(14-2)+1
000053 e0a2      	LDI  R26,2
000054 27bb      	CLR  R27
                 __CLEAR_REG:
000055 93ed      	ST   X+,R30
000056 958a      	DEC  R24
000057 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000058 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000059 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005b 93ed      	ST   X+,R30
00005c 9701      	SBIW R24,1
00005d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005e e8ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000060 9185      	LPM  R24,Z+
000061 9195      	LPM  R25,Z+
000062 9700      	SBIW R24,0
000063 f061      	BREQ __GLOBAL_INI_END
000064 91a5      	LPM  R26,Z+
000065 91b5      	LPM  R27,Z+
000066 9005      	LPM  R0,Z+
000067 9015      	LPM  R1,Z+
000068 01bf      	MOVW R22,R30
000069 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006a 9005      	LPM  R0,Z+
00006b 920d      	ST   X+,R0
00006c 9701      	SBIW R24,1
00006d f7e1      	BRNE __GLOBAL_INI_LOOP
00006e 01fb      	MOVW R30,R22
00006f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000070 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000071 bfed      	OUT  SPL,R30
000072 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000073 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000074 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000075 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000076 940c 0085 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0008 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0009 ADMUX=adc_input | ADC_VREF_TYPE;
000078 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000079 81e8      	LD   R30,Y
00007a b9e7      	OUT  0x7,R30
                 ; 0000 000A delay_us(10);
                +
00007b e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
00007c 958a     +DEC R24
00007d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 000B ADCSRA|=(1<<ADSC);
00007e 9a36      	SBI  0x6,6
                 ; 0000 000C while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00007f 9b34      	SBIS 0x6,4
000080 cffe      	RJMP _0x3
                 ; 0000 000D ADCSRA|=(1<<ADIF);
000081 9a34      	SBI  0x6,4
                 ; 0000 000E return ADCW;
000082 b1e4      	IN   R30,0x4
000083 b1f5      	IN   R31,0x4+1
000084 c11e      	RJMP _0x2080002
                 ; 0000 000F }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0013 int     i ;
                 ; 0000 0014 int     a , b ;
                 ; 0000 0015 float   Temperature ;
                 ; 0000 0016 char    Buffer_LCD[16];
                 ; 0000 0017 
                 ; 0000 0018 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000085 9764      	SBIW R28,20
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                 ;	b -> R20,R21
                 ;	Temperature -> Y+16
                 ;	Buffer_LCD -> Y+0
000086 e0e0      	LDI  R30,LOW(0)
000087 bbea      	OUT  0x1A,R30
                 ; 0000 0019 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000088 bbeb      	OUT  0x1B,R30
                 ; 0000 001A 
                 ; 0000 001B DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
000089 efef      	LDI  R30,LOW(255)
00008a bbe1      	OUT  0x11,R30
                 ; 0000 001C PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00008b e0e0      	LDI  R30,LOW(0)
00008c bbe2      	OUT  0x12,R30
                 ; 0000 001D 
                 ; 0000 001E ADMUX=ADC_VREF_TYPE;
00008d b9e7      	OUT  0x7,R30
                 ; 0000 001F ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
00008e e8e2      	LDI  R30,LOW(130)
00008f b9e6      	OUT  0x6,R30
                 ; 0000 0020 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000090 e0e0      	LDI  R30,LOW(0)
000091 bfe0      	OUT  0x30,R30
                 ; 0000 0021 
                 ; 0000 0022 lcd_init(16);
000092 e1a0      	LDI  R26,LOW(16)
000093 d0e4      	RCALL _lcd_init
                 ; 0000 0023 lcd_clear();
000094 d0a0      	RCALL _lcd_clear
                 ; 0000 0024 
                 ; 0000 0025 while (1)
                 _0x6:
                 ; 0000 0026       {
                 ; 0000 0027       a=0;  b=0;
                +
000095 e020     +LDI R18 , LOW ( 0 )
000096 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000097 e040     +LDI R20 , LOW ( 0 )
000098 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0028       for(i=1;i<=10;i++)
                +
000099 e001     +LDI R16 , LOW ( 1 )
00009a e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 _0xA:
                +
00009b 300b     +CPI R16 , LOW ( 11 )
00009c e0e0     +LDI R30 , HIGH ( 11 )
00009d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,11
00009e f45c      	BRGE _0xB
                 ; 0000 0029       {
                 ; 0000 002A       a=a+read_adc(0);
00009f e0a0      	LDI  R26,LOW(0)
0000a0 dfd7      	RCALL _read_adc
                +
0000a1 0f2e     +ADD R18 , R30
0000a2 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0000 002B       delay_ms(30);
0000a3 e1ae      	LDI  R26,LOW(30)
0000a4 e0b0      	LDI  R27,0
0000a5 940e 039f 	CALL _delay_ms
                 ; 0000 002C       }
                +
0000a7 5f0f     +SUBI R16 , LOW ( - 1 )
0000a8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000a9 cff1      	RJMP _0xA
                 _0xB:
                 ; 0000 002D       b=a/10;
0000aa 01d9      	MOVW R26,R18
0000ab e0ea      	LDI  R30,LOW(10)
0000ac e0f0      	LDI  R31,HIGH(10)
0000ad 940e 0493 	CALL __DIVW21
0000af 01af      	MOVW R20,R30
                 ; 0000 002E 
                 ; 0000 002F       Temperature=(b/2.054) ;
0000b0 940e 047b 	CALL __CWD1
0000b2 940e 03d8 	CALL __CDF1
0000b4 01df      	MOVW R26,R30
0000b5 01cb      	MOVW R24,R22
                +
0000b6 ebec     +LDI R30 , LOW ( 0x400374BC )
0000b7 e7f4     +LDI R31 , HIGH ( 0x400374BC )
0000b8 e063     +LDI R22 , BYTE3 ( 0x400374BC )
0000b9 e470     +LDI R23 , BYTE4 ( 0x400374BC )
                 	__GETD1N 0x400374BC
0000ba 940e 0406 	CALL __DIVF21
                +
0000bc 8be8     +STD Y + 16 , R30
0000bd 8bf9     +STD Y + 16 + 1 , R31
0000be 8b6a     +STD Y + 16 + 2 , R22
0000bf 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
                 ; 0000 0030       sprintf(Buffer_LCD,"T=%3.1f",Temperature);
0000c0 01fe      	MOVW R30,R28
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
                +
0000c3 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c5 93fa      	ST   -Y,R31
0000c6 93ea      	ST   -Y,R30
                +
0000c7 89ec     +LDD R30 , Y + 20
0000c8 89fd     +LDD R31 , Y + 20 + 1
0000c9 896e     +LDD R22 , Y + 20 + 2
0000ca 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
0000cb 940e 04ae 	CALL __PUTPARD1
0000cd e084      	LDI  R24,4
0000ce 940e 0319 	CALL _sprintf
0000d0 9628      	ADIW R28,8
                 ; 0000 0031       lcd_gotoxy(0,0);
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 93ea      	ST   -Y,R30
0000d3 e0a0      	LDI  R26,LOW(0)
0000d4 d053      	RCALL _lcd_gotoxy
                 ; 0000 0032       lcd_puts(Buffer_LCD);
0000d5 01de      	MOVW R26,R28
0000d6 d07f      	RCALL _lcd_puts
                 ; 0000 0033       lcd_gotoxy(7,0);
0000d7 e0e7      	LDI  R30,LOW(7)
0000d8 93ea      	ST   -Y,R30
0000d9 e0a0      	LDI  R26,LOW(0)
0000da d04d      	RCALL _lcd_gotoxy
                 ; 0000 0034       lcd_putsf("C");
                +
0000db e6ae     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
0000dc e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
0000dd d087      	RCALL _lcd_putsf
                 ; 0000 0035 
                 ; 0000 0036       if(Temperature<=20.99)
                +
0000de 89a8     +LDD R26 , Y + 16
0000df 89b9     +LDD R27 , Y + 16 + 1
0000e0 898a     +LDD R24 , Y + 16 + 2
0000e1 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0000e2 e8e5     +LDI R30 , LOW ( 0x41A7EB85 )
0000e3 eefb     +LDI R31 , HIGH ( 0x41A7EB85 )
0000e4 ea67     +LDI R22 , BYTE3 ( 0x41A7EB85 )
0000e5 e471     +LDI R23 , BYTE4 ( 0x41A7EB85 )
                 	__GETD1N 0x41A7EB85
0000e6 940e 044b 	CALL __CMPF12
0000e8 f011      	BREQ PC+3
0000e9 f008      	BRCS PC+2
0000ea c008      	RJMP _0xC
                 ; 0000 0037       {
                 ; 0000 0038       PORTD.0=0;
0000eb 9890      	CBI  0x12,0
                 ; 0000 0039       lcd_gotoxy(1,1);
0000ec e0e1      	LDI  R30,LOW(1)
0000ed 93ea      	ST   -Y,R30
0000ee e0a1      	LDI  R26,LOW(1)
0000ef d038      	RCALL _lcd_gotoxy
                 ; 0000 003A       lcd_putsf("Cooler--> OFF");
                +
0000f0 e7a0     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
0000f1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
0000f2 d072      	RCALL _lcd_putsf
                 ; 0000 003B       }
                 ; 0000 003C 
                 ; 0000 003D       if(Temperature>=23.99)  {
                 _0xC:
                +
0000f3 89a8     +LDD R26 , Y + 16
0000f4 89b9     +LDD R27 , Y + 16 + 1
0000f5 898a     +LDD R24 , Y + 16 + 2
0000f6 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0000f7 e8e5     +LDI R30 , LOW ( 0x41BFEB85 )
0000f8 eefb     +LDI R31 , HIGH ( 0x41BFEB85 )
0000f9 eb6f     +LDI R22 , BYTE3 ( 0x41BFEB85 )
0000fa e471     +LDI R23 , BYTE4 ( 0x41BFEB85 )
                 	__GETD1N 0x41BFEB85
0000fb 940e 044b 	CALL __CMPF12
0000fd f040      	BRLO _0xF
                 ; 0000 003E       PORTD.0=1;
0000fe 9a90      	SBI  0x12,0
                 ; 0000 003F       lcd_gotoxy(1,1);
0000ff e0e1      	LDI  R30,LOW(1)
000100 93ea      	ST   -Y,R30
000101 e0a1      	LDI  R26,LOW(1)
000102 d025      	RCALL _lcd_gotoxy
                 ; 0000 0040       lcd_putsf("Cooler-->  ON");
                +
000103 e7ae     +LDI R26 , LOW ( 2 * _0x0 + ( 24 ) )
000104 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW2FN _0x0,24
000105 d05f      	RCALL _lcd_putsf
                 ; 0000 0041       }
                 ; 0000 0042 
                 ; 0000 0043       }
                 _0xF:
000106 cf8e      	RJMP _0x6
                 ; 0000 0044 }
                 _0x12:
000107 cfff      	RJMP _0x12
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000108 93aa      	ST   -Y,R26
000109 b3e5      	IN   R30,0x15
00010a 70ef      	ANDI R30,LOW(0xF)
00010b 2fae      	MOV  R26,R30
00010c 81e8      	LD   R30,Y
00010d 7fe0      	ANDI R30,LOW(0xF0)
00010e 2bea      	OR   R30,R26
00010f bbe5      	OUT  0x15,R30
                +
000110 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000111 958a     +DEC R24
000112 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000113 9aaa      	SBI  0x15,2
                +
000114 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000115 958a     +DEC R24
000116 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000117 98aa      	CBI  0x15,2
                +
000118 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000119 958a     +DEC R24
00011a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00011b c087      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00011c 93aa      	ST   -Y,R26
00011d 81a8      	LD   R26,Y
00011e dfe9      	RCALL __lcd_write_nibble_G100
00011f 81e8          ld    r30,y
000120 95e2          swap  r30
000121 83e8          st    y,r30
000122 81a8      	LD   R26,Y
000123 dfe4      	RCALL __lcd_write_nibble_G100
                +
000124 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000125 958a     +DEC R24
000126 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000127 c07b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000128 93aa      	ST   -Y,R26
000129 81e8      	LD   R30,Y
00012a e0f0      	LDI  R31,0
00012b 5ae0      	SUBI R30,LOW(-__base_y_G100)
00012c 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00012d 81e0      	LD   R30,Z
00012e 81a9      	LDD  R26,Y+1
00012f 0fae      	ADD  R26,R30
000130 dfeb      	RCALL __lcd_write_data
000131 8059      	LDD  R5,Y+1
000132 8048      	LDD  R4,Y+0
000133 9622      	ADIW R28,2
000134 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000135 e0a2      	LDI  R26,LOW(2)
000136 940e 0366 	CALL SUBOPT_0x0
000138 e0ac      	LDI  R26,LOW(12)
000139 dfe2      	RCALL __lcd_write_data
00013a e0a1      	LDI  R26,LOW(1)
00013b 940e 0366 	CALL SUBOPT_0x0
00013d e0e0      	LDI  R30,LOW(0)
00013e 2e4e      	MOV  R4,R30
00013f 2e5e      	MOV  R5,R30
000140 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000141 93aa      	ST   -Y,R26
000142 81a8      	LD   R26,Y
000143 30aa      	CPI  R26,LOW(0xA)
000144 f011      	BREQ _0x2000005
000145 1457      	CP   R5,R7
000146 f048      	BRLO _0x2000004
                 _0x2000005:
000147 e0e0      	LDI  R30,LOW(0)
000148 93ea      	ST   -Y,R30
000149 9443      	INC  R4
00014a 2da4      	MOV  R26,R4
00014b dfdc      	RCALL _lcd_gotoxy
00014c 81a8      	LD   R26,Y
00014d 30aa      	CPI  R26,LOW(0xA)
00014e f409      	BRNE _0x2000007
00014f c053      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000150 9453      	INC  R5
000151 9aa8      	SBI  0x15,0
000152 81a8      	LD   R26,Y
000153 dfc8      	RCALL __lcd_write_data
000154 98a8      	CBI  0x15,0
000155 c04d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000156 93ba      	ST   -Y,R27
000157 93aa      	ST   -Y,R26
000158 931a      	ST   -Y,R17
                 _0x2000008:
000159 81a9      	LDD  R26,Y+1
00015a 81ba      	LDD  R27,Y+1+1
00015b 91ed      	LD   R30,X+
00015c 83a9      	STD  Y+1,R26
00015d 83ba      	STD  Y+1+1,R27
00015e 2f1e      	MOV  R17,R30
00015f 30e0      	CPI  R30,0
000160 f019      	BREQ _0x200000A
000161 2fa1      	MOV  R26,R17
000162 dfde      	RCALL _lcd_putchar
000163 cff5      	RJMP _0x2000008
                 _0x200000A:
000164 c010      	RJMP _0x2080003
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000165 93ba      	ST   -Y,R27
000166 93aa      	ST   -Y,R26
000167 931a      	ST   -Y,R17
                 _0x200000B:
000168 81e9      	LDD  R30,Y+1
000169 81fa      	LDD  R31,Y+1+1
00016a 9631      	ADIW R30,1
00016b 83e9      	STD  Y+1,R30
00016c 83fa      	STD  Y+1+1,R31
00016d 9731      	SBIW R30,1
00016e 91e4      	LPM  R30,Z
00016f 2f1e      	MOV  R17,R30
000170 30e0      	CPI  R30,0
000171 f019      	BREQ _0x200000D
000172 2fa1      	MOV  R26,R17
000173 dfcd      	RCALL _lcd_putchar
000174 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080003:
000175 8118      	LDD  R17,Y+0
000176 9623      	ADIW R28,3
000177 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000178 93aa      	ST   -Y,R26
000179 b3e4      	IN   R30,0x14
00017a 6fe0      	ORI  R30,LOW(0xF0)
00017b bbe4      	OUT  0x14,R30
00017c 9aa2      	SBI  0x14,2
00017d 9aa0      	SBI  0x14,0
00017e 9aa1      	SBI  0x14,1
00017f 98aa      	CBI  0x15,2
000180 98a8      	CBI  0x15,0
000181 98a9      	CBI  0x15,1
000182 8078      	LDD  R7,Y+0
000183 81e8      	LD   R30,Y
000184 58e0      	SUBI R30,-LOW(128)
                +
000185 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000187 81e8      	LD   R30,Y
000188 54e0      	SUBI R30,-LOW(192)
                +
000189 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00018b e1a4      	LDI  R26,LOW(20)
00018c e0b0      	LDI  R27,0
00018d 940e 039f 	CALL _delay_ms
00018f 940e 036c 	CALL SUBOPT_0x1
000191 940e 036c 	CALL SUBOPT_0x1
000193 940e 036c 	CALL SUBOPT_0x1
000195 e2a0      	LDI  R26,LOW(32)
000196 df71      	RCALL __lcd_write_nibble_G100
                +
000197 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000198 958a     +DEC R24
000199 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00019a e2a8      	LDI  R26,LOW(40)
00019b df80      	RCALL __lcd_write_data
00019c e0a4      	LDI  R26,LOW(4)
00019d df7e      	RCALL __lcd_write_data
00019e e8a5      	LDI  R26,LOW(133)
00019f df7c      	RCALL __lcd_write_data
0001a0 e0a6      	LDI  R26,LOW(6)
0001a1 df7a      	RCALL __lcd_write_data
0001a2 df92      	RCALL _lcd_clear
                 _0x2080002:
0001a3 9621      	ADIW R28,1
0001a4 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001a5 93ba      	ST   -Y,R27
0001a6 93aa      	ST   -Y,R26
0001a7 931a      	ST   -Y,R17
0001a8 930a      	ST   -Y,R16
0001a9 81aa      	LDD  R26,Y+2
0001aa 81bb      	LDD  R27,Y+2+1
0001ab 9612      	ADIW R26,2
0001ac 940e 04a6 	CALL __GETW1P
0001ae 9730      	SBIW R30,0
0001af f159      	BREQ _0x2020010
0001b0 81aa      	LDD  R26,Y+2
0001b1 81bb      	LDD  R27,Y+2+1
0001b2 9614      	ADIW R26,4
0001b3 940e 04a6 	CALL __GETW1P
0001b5 018f      	MOVW R16,R30
0001b6 9730      	SBIW R30,0
0001b7 f061      	BREQ _0x2020012
                +
0001b8 3002     +CPI R16 , LOW ( 2 )
0001b9 e0e0     +LDI R30 , HIGH ( 2 )
0001ba 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001bb f098      	BRLO _0x2020013
0001bc 01f8      	MOVW R30,R16
0001bd 9731      	SBIW R30,1
0001be 018f      	MOVW R16,R30
                +
0001bf 81aa     +LDD R26 , Y + 2
0001c0 81bb     +LDD R27 , Y + 2 + 1
0001c1 9614     +ADIW R26 , 4
0001c2 93ed     +ST X + , R30
0001c3 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001c4 81aa      	LDD  R26,Y+2
0001c5 81bb      	LDD  R27,Y+2+1
0001c6 9612      	ADIW R26,2
0001c7 91ed      	LD   R30,X+
0001c8 91fd      	LD   R31,X+
0001c9 9631      	ADIW R30,1
0001ca 93fe      	ST   -X,R31
0001cb 93ee      	ST   -X,R30
0001cc 9731      	SBIW R30,1
0001cd 81ac      	LDD  R26,Y+4
0001ce 83a0      	STD  Z+0,R26
                 _0x2020013:
0001cf 81aa      	LDD  R26,Y+2
0001d0 81bb      	LDD  R27,Y+2+1
0001d1 940e 04a6 	CALL __GETW1P
0001d3 23ff      	TST  R31
0001d4 f02a      	BRMI _0x2020014
0001d5 91ed      	LD   R30,X+
0001d6 91fd      	LD   R31,X+
0001d7 9631      	ADIW R30,1
0001d8 93fe      	ST   -X,R31
0001d9 93ee      	ST   -X,R30
                 _0x2020014:
0001da c006      	RJMP _0x2020015
                 _0x2020010:
0001db 81aa      	LDD  R26,Y+2
0001dc 81bb      	LDD  R27,Y+2+1
0001dd efef      	LDI  R30,LOW(65535)
0001de efff      	LDI  R31,HIGH(65535)
0001df 93ed      	ST   X+,R30
0001e0 93fc      	ST   X,R31
                 _0x2020015:
0001e1 8119      	LDD  R17,Y+1
0001e2 8108      	LDD  R16,Y+0
0001e3 9625      	ADIW R28,5
0001e4 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001e5 93ba      	ST   -Y,R27
0001e6 93aa      	ST   -Y,R26
0001e7 9726      	SBIW R28,6
0001e8 940e 04b3 	CALL __SAVELOCR6
0001ea e010      	LDI  R17,0
0001eb 85ac      	LDD  R26,Y+12
0001ec 85bd      	LDD  R27,Y+12+1
0001ed e0e0      	LDI  R30,LOW(0)
0001ee e0f0      	LDI  R31,HIGH(0)
0001ef 93ed      	ST   X+,R30
0001f0 93fc      	ST   X,R31
                 _0x2020016:
0001f1 89ea      	LDD  R30,Y+18
0001f2 89fb      	LDD  R31,Y+18+1
0001f3 9631      	ADIW R30,1
0001f4 8bea      	STD  Y+18,R30
0001f5 8bfb      	STD  Y+18+1,R31
0001f6 9731      	SBIW R30,1
0001f7 91e4      	LPM  R30,Z
0001f8 2f2e      	MOV  R18,R30
0001f9 30e0      	CPI  R30,0
0001fa f409      	BRNE PC+2
0001fb c115      	RJMP _0x2020018
0001fc 2fe1      	MOV  R30,R17
0001fd 30e0      	CPI  R30,0
0001fe f439      	BRNE _0x202001C
0001ff 3225      	CPI  R18,37
000200 f411      	BRNE _0x202001D
000201 e011      	LDI  R17,LOW(1)
000202 c002      	RJMP _0x202001E
                 _0x202001D:
000203 940e 0373 	CALL SUBOPT_0x2
                 _0x202001E:
000205 c10a      	RJMP _0x202001B
                 _0x202001C:
000206 30e1      	CPI  R30,LOW(0x1)
000207 f4a9      	BRNE _0x202001F
000208 3225      	CPI  R18,37
000209 f419      	BRNE _0x2020020
00020a 940e 0373 	CALL SUBOPT_0x2
00020c c102      	RJMP _0x20200CC
                 _0x2020020:
00020d e012      	LDI  R17,LOW(2)
00020e e040      	LDI  R20,LOW(0)
00020f e000      	LDI  R16,LOW(0)
000210 322d      	CPI  R18,45
000211 f411      	BRNE _0x2020021
000212 e001      	LDI  R16,LOW(1)
000213 c0fc      	RJMP _0x202001B
                 _0x2020021:
000214 322b      	CPI  R18,43
000215 f411      	BRNE _0x2020022
000216 e24b      	LDI  R20,LOW(43)
000217 c0f8      	RJMP _0x202001B
                 _0x2020022:
000218 3220      	CPI  R18,32
000219 f411      	BRNE _0x2020023
00021a e240      	LDI  R20,LOW(32)
00021b c0f4      	RJMP _0x202001B
                 _0x2020023:
00021c c002      	RJMP _0x2020024
                 _0x202001F:
00021d 30e2      	CPI  R30,LOW(0x2)
00021e f439      	BRNE _0x2020025
                 _0x2020024:
00021f e050      	LDI  R21,LOW(0)
000220 e013      	LDI  R17,LOW(3)
000221 3320      	CPI  R18,48
000222 f411      	BRNE _0x2020026
000223 6800      	ORI  R16,LOW(128)
000224 c0eb      	RJMP _0x202001B
                 _0x2020026:
000225 c003      	RJMP _0x2020027
                 _0x2020025:
000226 30e3      	CPI  R30,LOW(0x3)
000227 f009      	BREQ PC+2
000228 c0e7      	RJMP _0x202001B
                 _0x2020027:
000229 3320      	CPI  R18,48
00022a f010      	BRLO _0x202002A
00022b 332a      	CPI  R18,58
00022c f008      	BRLO _0x202002B
                 _0x202002A:
00022d c007      	RJMP _0x2020029
                 _0x202002B:
00022e e0aa      	LDI  R26,LOW(10)
00022f 9f5a      	MUL  R21,R26
000230 2d50      	MOV  R21,R0
000231 2fe2      	MOV  R30,R18
000232 53e0      	SUBI R30,LOW(48)
000233 0f5e      	ADD  R21,R30
000234 c0db      	RJMP _0x202001B
                 _0x2020029:
000235 2fe2      	MOV  R30,R18
000236 36e3      	CPI  R30,LOW(0x63)
000237 f449      	BRNE _0x202002F
000238 940e 037a 	CALL SUBOPT_0x3
00023a 89e8      	LDD  R30,Y+16
00023b 89f9      	LDD  R31,Y+16+1
00023c 81a4      	LDD  R26,Z+4
00023d 93aa      	ST   -Y,R26
00023e 940e 0380 	CALL SUBOPT_0x4
000240 c0ce      	RJMP _0x2020030
                 _0x202002F:
000241 37e3      	CPI  R30,LOW(0x73)
000242 f441      	BRNE _0x2020032
000243 940e 037a 	CALL SUBOPT_0x3
000245 940e 0386 	CALL SUBOPT_0x5
000247 940e 034d 	CALL _strlen
000249 2f1e      	MOV  R17,R30
00024a c00a      	RJMP _0x2020033
                 _0x2020032:
00024b 37e0      	CPI  R30,LOW(0x70)
00024c f461      	BRNE _0x2020035
00024d 940e 037a 	CALL SUBOPT_0x3
00024f 940e 0386 	CALL SUBOPT_0x5
000251 940e 0359 	CALL _strlenf
000253 2f1e      	MOV  R17,R30
000254 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000255 6002      	ORI  R16,LOW(2)
000256 770f      	ANDI R16,LOW(127)
000257 e030      	LDI  R19,LOW(0)
000258 c034      	RJMP _0x2020036
                 _0x2020035:
000259 36e4      	CPI  R30,LOW(0x64)
00025a f011      	BREQ _0x2020039
00025b 36e9      	CPI  R30,LOW(0x69)
00025c f411      	BRNE _0x202003A
                 _0x2020039:
00025d 6004      	ORI  R16,LOW(4)
00025e c002      	RJMP _0x202003B
                 _0x202003A:
00025f 37e5      	CPI  R30,LOW(0x75)
000260 f431      	BRNE _0x202003C
                 _0x202003B:
000261 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000262 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000263 83ee      	STD  Y+6,R30
000264 83ff      	STD  Y+6+1,R31
000265 e015      	LDI  R17,LOW(5)
000266 c00c      	RJMP _0x202003D
                 _0x202003C:
000267 35e8      	CPI  R30,LOW(0x58)
000268 f411      	BRNE _0x202003F
000269 6008      	ORI  R16,LOW(8)
00026a c003      	RJMP _0x2020040
                 _0x202003F:
00026b 37e8      	CPI  R30,LOW(0x78)
00026c f009      	BREQ PC+2
00026d c0a1      	RJMP _0x2020071
                 _0x2020040:
00026e e5ee      	LDI  R30,LOW(_tbl16_G101*2)
00026f e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000270 83ee      	STD  Y+6,R30
000271 83ff      	STD  Y+6+1,R31
000272 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000273 ff02      	SBRS R16,2
000274 c014      	RJMP _0x2020042
000275 940e 037a 	CALL SUBOPT_0x3
000277 940e 0390 	CALL SUBOPT_0x6
000279 85ab      	LDD  R26,Y+11
00027a 23aa      	TST  R26
00027b f43a      	BRPL _0x2020043
00027c 85ea      	LDD  R30,Y+10
00027d 85fb      	LDD  R31,Y+10+1
00027e 940e 046f 	CALL __ANEGW1
000280 87ea      	STD  Y+10,R30
000281 87fb      	STD  Y+10+1,R31
000282 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000283 3040      	CPI  R20,0
000284 f011      	BREQ _0x2020044
000285 5f1f      	SUBI R17,-LOW(1)
000286 c001      	RJMP _0x2020045
                 _0x2020044:
000287 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000288 c004      	RJMP _0x2020046
                 _0x2020042:
000289 940e 037a 	CALL SUBOPT_0x3
00028b 940e 0390 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
00028d fd00      	SBRC R16,0
00028e c011      	RJMP _0x2020047
                 _0x2020048:
00028f 1715      	CP   R17,R21
000290 f478      	BRSH _0x202004A
000291 ff07      	SBRS R16,7
000292 c008      	RJMP _0x202004B
000293 ff02      	SBRS R16,2
000294 c004      	RJMP _0x202004C
000295 7f0b      	ANDI R16,LOW(251)
000296 2f24      	MOV  R18,R20
000297 5011      	SUBI R17,LOW(1)
000298 c001      	RJMP _0x202004D
                 _0x202004C:
000299 e320      	LDI  R18,LOW(48)
                 _0x202004D:
00029a c001      	RJMP _0x202004E
                 _0x202004B:
00029b e220      	LDI  R18,LOW(32)
                 _0x202004E:
00029c 940e 0373 	CALL SUBOPT_0x2
00029e 5051      	SUBI R21,LOW(1)
00029f cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002a0 2f31      	MOV  R19,R17
0002a1 ff01      	SBRS R16,1
0002a2 c017      	RJMP _0x202004F
                 _0x2020050:
0002a3 3030      	CPI  R19,0
0002a4 f0a1      	BREQ _0x2020052
0002a5 ff03      	SBRS R16,3
0002a6 c006      	RJMP _0x2020053
0002a7 81ee      	LDD  R30,Y+6
0002a8 81ff      	LDD  R31,Y+6+1
0002a9 9125      	LPM  R18,Z+
0002aa 83ee      	STD  Y+6,R30
0002ab 83ff      	STD  Y+6+1,R31
0002ac c005      	RJMP _0x2020054
                 _0x2020053:
0002ad 81ae      	LDD  R26,Y+6
0002ae 81bf      	LDD  R27,Y+6+1
0002af 912d      	LD   R18,X+
0002b0 83ae      	STD  Y+6,R26
0002b1 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002b2 940e 0373 	CALL SUBOPT_0x2
0002b4 3050      	CPI  R21,0
0002b5 f009      	BREQ _0x2020055
0002b6 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002b7 5031      	SUBI R19,LOW(1)
0002b8 cfea      	RJMP _0x2020050
                 _0x2020052:
0002b9 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002ba e320      	LDI  R18,LOW(48)
0002bb 81ee      	LDD  R30,Y+6
0002bc 81ff      	LDD  R31,Y+6+1
0002bd 940e 04aa 	CALL __GETW1PF
0002bf 87e8      	STD  Y+8,R30
0002c0 87f9      	STD  Y+8+1,R31
0002c1 81ee      	LDD  R30,Y+6
0002c2 81ff      	LDD  R31,Y+6+1
0002c3 9632      	ADIW R30,2
0002c4 83ee      	STD  Y+6,R30
0002c5 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002c6 85e8      	LDD  R30,Y+8
0002c7 85f9      	LDD  R31,Y+8+1
0002c8 85aa      	LDD  R26,Y+10
0002c9 85bb      	LDD  R27,Y+10+1
0002ca 17ae      	CP   R26,R30
0002cb 07bf      	CPC  R27,R31
0002cc f050      	BRLO _0x202005C
0002cd 5f2f      	SUBI R18,-LOW(1)
0002ce 85a8      	LDD  R26,Y+8
0002cf 85b9      	LDD  R27,Y+8+1
0002d0 85ea      	LDD  R30,Y+10
0002d1 85fb      	LDD  R31,Y+10+1
0002d2 1bea      	SUB  R30,R26
0002d3 0bfb      	SBC  R31,R27
0002d4 87ea      	STD  Y+10,R30
0002d5 87fb      	STD  Y+10+1,R31
0002d6 cfef      	RJMP _0x202005A
                 _0x202005C:
0002d7 332a      	CPI  R18,58
0002d8 f028      	BRLO _0x202005D
0002d9 ff03      	SBRS R16,3
0002da c002      	RJMP _0x202005E
0002db 5f29      	SUBI R18,-LOW(7)
0002dc c001      	RJMP _0x202005F
                 _0x202005E:
0002dd 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002de fd04      	SBRC R16,4
0002df c01a      	RJMP _0x2020061
0002e0 3321      	CPI  R18,49
0002e1 f420      	BRSH _0x2020063
0002e2 85a8      	LDD  R26,Y+8
0002e3 85b9      	LDD  R27,Y+8+1
0002e4 9711      	SBIW R26,1
0002e5 f409      	BRNE _0x2020062
                 _0x2020063:
0002e6 c009      	RJMP _0x20200CD
                 _0x2020062:
0002e7 1753      	CP   R21,R19
0002e8 f010      	BRLO _0x2020067
0002e9 ff00      	SBRS R16,0
0002ea c001      	RJMP _0x2020068
                 _0x2020067:
0002eb c013      	RJMP _0x2020066
                 _0x2020068:
0002ec e220      	LDI  R18,LOW(32)
0002ed ff07      	SBRS R16,7
0002ee c00b      	RJMP _0x2020069
0002ef e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002f0 6100      	ORI  R16,LOW(16)
0002f1 ff02      	SBRS R16,2
0002f2 c007      	RJMP _0x202006A
0002f3 7f0b      	ANDI R16,LOW(251)
0002f4 934a      	ST   -Y,R20
0002f5 940e 0380 	CALL SUBOPT_0x4
0002f7 3050      	CPI  R21,0
0002f8 f009      	BREQ _0x202006B
0002f9 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002fa 940e 0373 	CALL SUBOPT_0x2
0002fc 3050      	CPI  R21,0
0002fd f009      	BREQ _0x202006C
0002fe 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002ff 5031      	SUBI R19,LOW(1)
000300 85a8      	LDD  R26,Y+8
000301 85b9      	LDD  R27,Y+8+1
000302 9712      	SBIW R26,2
000303 f008      	BRLO _0x2020059
000304 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000305 ff00      	SBRS R16,0
000306 c008      	RJMP _0x202006D
                 _0x202006E:
000307 3050      	CPI  R21,0
000308 f031      	BREQ _0x2020070
000309 5051      	SUBI R21,LOW(1)
00030a e2e0      	LDI  R30,LOW(32)
00030b 93ea      	ST   -Y,R30
00030c 940e 0380 	CALL SUBOPT_0x4
00030e cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00030f e010      	LDI  R17,LOW(0)
                 _0x202001B:
000310 cee0      	RJMP _0x2020016
                 _0x2020018:
000311 85ac      	LDD  R26,Y+12
000312 85bd      	LDD  R27,Y+12+1
000313 940e 04a6 	CALL __GETW1P
000315 940e 04ba 	CALL __LOADLOCR6
000317 9664      	ADIW R28,20
000318 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000319 92ff      	PUSH R15
00031a 2ef8      	MOV  R15,R24
00031b 9726      	SBIW R28,6
00031c 940e 04b5 	CALL __SAVELOCR4
00031e 940e 0398 	CALL SUBOPT_0x7
000320 9730      	SBIW R30,0
000321 f419      	BRNE _0x2020072
000322 efef      	LDI  R30,LOW(65535)
000323 efff      	LDI  R31,HIGH(65535)
000324 c023      	RJMP _0x2080001
                 _0x2020072:
000325 01de      	MOVW R26,R28
000326 9616      	ADIW R26,6
000327 940e 046b 	CALL __ADDW2R15
000329 018d      	MOVW R16,R26
00032a 940e 0398 	CALL SUBOPT_0x7
00032c 83ee      	STD  Y+6,R30
00032d 83ff      	STD  Y+6+1,R31
00032e e0e0      	LDI  R30,LOW(0)
00032f 87e8      	STD  Y+8,R30
000330 87e9      	STD  Y+8+1,R30
000331 01de      	MOVW R26,R28
000332 961a      	ADIW R26,10
000333 940e 046b 	CALL __ADDW2R15
000335 940e 04a6 	CALL __GETW1P
000337 93fa      	ST   -Y,R31
000338 93ea      	ST   -Y,R30
000339 931a      	ST   -Y,R17
00033a 930a      	ST   -Y,R16
00033b eae5      	LDI  R30,LOW(_put_buff_G101)
00033c e0f1      	LDI  R31,HIGH(_put_buff_G101)
00033d 93fa      	ST   -Y,R31
00033e 93ea      	ST   -Y,R30
00033f 01de      	MOVW R26,R28
000340 961a      	ADIW R26,10
000341 dea3      	RCALL __print_G101
000342 019f      	MOVW R18,R30
000343 81ae      	LDD  R26,Y+6
000344 81bf      	LDD  R27,Y+6+1
000345 e0e0      	LDI  R30,LOW(0)
000346 93ec      	ST   X,R30
000347 01f9      	MOVW R30,R18
                 _0x2080001:
000348 940e 04bc 	CALL __LOADLOCR4
00034a 962a      	ADIW R28,10
00034b 90ff      	POP  R15
00034c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00034d 93ba      	ST   -Y,R27
00034e 93aa      	ST   -Y,R26
00034f 91a9          ld   r26,y+
000350 91b9          ld   r27,y+
000351 27ee          clr  r30
000352 27ff          clr  r31
                 strlen0:
000353 916d          ld   r22,x+
000354 2366          tst  r22
000355 f011          breq strlen1
000356 9631          adiw r30,1
000357 cffb          rjmp strlen0
                 strlen1:
000358 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000359 93ba      	ST   -Y,R27
00035a 93aa      	ST   -Y,R26
00035b 27aa          clr  r26
00035c 27bb          clr  r27
00035d 91e9          ld   r30,y+
00035e 91f9          ld   r31,y+
                 strlenf0:
00035f 9005      	lpm  r0,z+
000360 2000          tst  r0
000361 f011          breq strlenf1
000362 9611          adiw r26,1
000363 cffb          rjmp strlenf0
                 strlenf1:
000364 01fd          movw r30,r26
000365 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000366 940e 011c 	CALL __lcd_write_data
000368 e0a3      	LDI  R26,LOW(3)
000369 e0b0      	LDI  R27,0
00036a 940c 039f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
00036c e3a0      	LDI  R26,LOW(48)
00036d 940e 0108 	CALL __lcd_write_nibble_G100
                +
00036f e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000370 958a     +DEC R24
000371 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000373 932a      	ST   -Y,R18
000374 85ad      	LDD  R26,Y+13
000375 85be      	LDD  R27,Y+13+1
000376 85ef      	LDD  R30,Y+15
000377 89f8      	LDD  R31,Y+15+1
000378 9509      	ICALL
000379 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
00037a 89e8      	LDD  R30,Y+16
00037b 89f9      	LDD  R31,Y+16+1
00037c 9734      	SBIW R30,4
00037d 8be8      	STD  Y+16,R30
00037e 8bf9      	STD  Y+16+1,R31
00037f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000380 85ad      	LDD  R26,Y+13
000381 85be      	LDD  R27,Y+13+1
000382 85ef      	LDD  R30,Y+15
000383 89f8      	LDD  R31,Y+15+1
000384 9509      	ICALL
000385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000386 89a8      	LDD  R26,Y+16
000387 89b9      	LDD  R27,Y+16+1
000388 9614      	ADIW R26,4
000389 940e 04a6 	CALL __GETW1P
00038b 83ee      	STD  Y+6,R30
00038c 83ff      	STD  Y+6+1,R31
00038d 81ae      	LDD  R26,Y+6
00038e 81bf      	LDD  R27,Y+6+1
00038f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000390 89a8      	LDD  R26,Y+16
000391 89b9      	LDD  R27,Y+16+1
000392 9614      	ADIW R26,4
000393 940e 04a6 	CALL __GETW1P
000395 87ea      	STD  Y+10,R30
000396 87fb      	STD  Y+10+1,R31
000397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000398 01de      	MOVW R26,R28
000399 961c      	ADIW R26,12
00039a 940e 046b 	CALL __ADDW2R15
00039c 940e 04a6 	CALL __GETW1P
00039e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00039f 9610      	adiw r26,0
0003a0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003a1 ef8a     +LDI R24 , LOW ( 0xFA )
0003a2 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0003a3 9701     +SBIW R24 , 1
0003a4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0003a5 95a8      	wdr
0003a6 9711      	sbiw r26,1
0003a7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003a8 9508      	ret
                 
                 __ROUND_REPACK:
0003a9 2355      	TST  R21
0003aa f442      	BRPL __REPACK
0003ab 3850      	CPI  R21,0x80
0003ac f411      	BRNE __ROUND_REPACK0
0003ad ffe0      	SBRS R30,0
0003ae c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0003af 9631      	ADIW R30,1
0003b0 1f69      	ADC  R22,R25
0003b1 1f79      	ADC  R23,R25
0003b2 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0003b3 e850      	LDI  R21,0x80
0003b4 2757      	EOR  R21,R23
0003b5 f411      	BRNE __REPACK0
0003b6 935f      	PUSH R21
0003b7 c03c      	RJMP __ZERORES
                 __REPACK0:
0003b8 3f5f      	CPI  R21,0xFF
0003b9 f031      	BREQ __REPACK1
0003ba 0f66      	LSL  R22
0003bb 0c00      	LSL  R0
0003bc 9557      	ROR  R21
0003bd 9567      	ROR  R22
0003be 2f75      	MOV  R23,R21
0003bf 9508      	RET
                 __REPACK1:
0003c0 935f      	PUSH R21
0003c1 2000      	TST  R0
0003c2 f00a      	BRMI __REPACK2
0003c3 c03c      	RJMP __MAXRES
                 __REPACK2:
0003c4 c035      	RJMP __MINRES
                 
                 __UNPACK:
0003c5 e850      	LDI  R21,0x80
0003c6 2e19      	MOV  R1,R25
0003c7 2215      	AND  R1,R21
0003c8 0f88      	LSL  R24
0003c9 1f99      	ROL  R25
0003ca 2795      	EOR  R25,R21
0003cb 0f55      	LSL  R21
0003cc 9587      	ROR  R24
                 
                 __UNPACK1:
0003cd e850      	LDI  R21,0x80
0003ce 2e07      	MOV  R0,R23
0003cf 2205      	AND  R0,R21
0003d0 0f66      	LSL  R22
0003d1 1f77      	ROL  R23
0003d2 2775      	EOR  R23,R21
0003d3 0f55      	LSL  R21
0003d4 9567      	ROR  R22
0003d5 9508      	RET
                 
                 __CDF1U:
0003d6 9468      	SET
0003d7 c001      	RJMP __CDF1U0
                 __CDF1:
0003d8 94e8      	CLT
                 __CDF1U0:
0003d9 9730      	SBIW R30,0
0003da 4060      	SBCI R22,0
0003db 4070      	SBCI R23,0
0003dc f0b1      	BREQ __CDF10
0003dd 2400      	CLR  R0
0003de f026      	BRTS __CDF11
0003df 2377      	TST  R23
0003e0 f412      	BRPL __CDF11
0003e1 9400      	COM  R0
0003e2 d090      	RCALL __ANEGD1
                 __CDF11:
0003e3 2e17      	MOV  R1,R23
0003e4 e17e      	LDI  R23,30
0003e5 2011      	TST  R1
                 __CDF12:
0003e6 f032      	BRMI __CDF13
0003e7 957a      	DEC  R23
0003e8 0fee      	LSL  R30
0003e9 1fff      	ROL  R31
0003ea 1f66      	ROL  R22
0003eb 1c11      	ROL  R1
0003ec cff9      	RJMP __CDF12
                 __CDF13:
0003ed 2fef      	MOV  R30,R31
0003ee 2ff6      	MOV  R31,R22
0003ef 2d61      	MOV  R22,R1
0003f0 935f      	PUSH R21
0003f1 dfc1      	RCALL __REPACK
0003f2 915f      	POP  R21
                 __CDF10:
0003f3 9508      	RET
                 
                 __ZERORES:
0003f4 27ee      	CLR  R30
0003f5 27ff      	CLR  R31
0003f6 2766      	CLR  R22
0003f7 2777      	CLR  R23
0003f8 915f      	POP  R21
0003f9 9508      	RET
                 
                 __MINRES:
0003fa efef      	SER  R30
0003fb efff      	SER  R31
0003fc e76f      	LDI  R22,0x7F
0003fd ef7f      	SER  R23
0003fe 915f      	POP  R21
0003ff 9508      	RET
                 
                 __MAXRES:
000400 efef      	SER  R30
000401 efff      	SER  R31
000402 e76f      	LDI  R22,0x7F
000403 e77f      	LDI  R23,0x7F
000404 915f      	POP  R21
000405 9508      	RET
                 
                 __DIVF21:
000406 935f      	PUSH R21
000407 dfbd      	RCALL __UNPACK
000408 3870      	CPI  R23,0x80
000409 f421      	BRNE __DIVF210
00040a 2011      	TST  R1
                 __DIVF211:
00040b f40a      	BRPL __DIVF219
00040c cfed      	RJMP __MINRES
                 __DIVF219:
00040d cff2      	RJMP __MAXRES
                 __DIVF210:
00040e 3890      	CPI  R25,0x80
00040f f409      	BRNE __DIVF218
                 __DIVF217:
000410 cfe3      	RJMP __ZERORES
                 __DIVF218:
000411 2401      	EOR  R0,R1
000412 9408      	SEC
000413 0b97      	SBC  R25,R23
000414 f41b      	BRVC __DIVF216
000415 f3d4      	BRLT __DIVF217
000416 2000      	TST  R0
000417 cff3      	RJMP __DIVF211
                 __DIVF216:
000418 2f79      	MOV  R23,R25
000419 931f      	PUSH R17
00041a 932f      	PUSH R18
00041b 933f      	PUSH R19
00041c 934f      	PUSH R20
00041d 2411      	CLR  R1
00041e 2711      	CLR  R17
00041f 2722      	CLR  R18
000420 2733      	CLR  R19
000421 2744      	CLR  R20
000422 2755      	CLR  R21
000423 e290      	LDI  R25,32
                 __DIVF212:
000424 17ae      	CP   R26,R30
000425 07bf      	CPC  R27,R31
000426 0786      	CPC  R24,R22
000427 0741      	CPC  R20,R17
000428 f030      	BRLO __DIVF213
000429 1bae      	SUB  R26,R30
00042a 0bbf      	SBC  R27,R31
00042b 0b86      	SBC  R24,R22
00042c 0b41      	SBC  R20,R17
00042d 9408      	SEC
00042e c001      	RJMP __DIVF214
                 __DIVF213:
00042f 9488      	CLC
                 __DIVF214:
000430 1f55      	ROL  R21
000431 1f22      	ROL  R18
000432 1f33      	ROL  R19
000433 1c11      	ROL  R1
000434 1faa      	ROL  R26
000435 1fbb      	ROL  R27
000436 1f88      	ROL  R24
000437 1f44      	ROL  R20
000438 959a      	DEC  R25
000439 f751      	BRNE __DIVF212
00043a 01f9      	MOVW R30,R18
00043b 2d61      	MOV  R22,R1
00043c 914f      	POP  R20
00043d 913f      	POP  R19
00043e 912f      	POP  R18
00043f 911f      	POP  R17
000440 2366      	TST  R22
000441 f032      	BRMI __DIVF215
000442 0f55      	LSL  R21
000443 1fee      	ROL  R30
000444 1fff      	ROL  R31
000445 1f66      	ROL  R22
000446 957a      	DEC  R23
000447 f243      	BRVS __DIVF217
                 __DIVF215:
000448 df60      	RCALL __ROUND_REPACK
000449 915f      	POP  R21
00044a 9508      	RET
                 
                 __CMPF12:
00044b 2399      	TST  R25
00044c f09a      	BRMI __CMPF120
00044d 2377      	TST  R23
00044e f042      	BRMI __CMPF121
00044f 1797      	CP   R25,R23
000450 f048      	BRLO __CMPF122
000451 f429      	BRNE __CMPF121
000452 17ae      	CP   R26,R30
000453 07bf      	CPC  R27,R31
000454 0786      	CPC  R24,R22
000455 f020      	BRLO __CMPF122
000456 f031      	BREQ __CMPF123
                 __CMPF121:
000457 9498      	CLZ
000458 9488      	CLC
000459 9508      	RET
                 __CMPF122:
00045a 9498      	CLZ
00045b 9408      	SEC
00045c 9508      	RET
                 __CMPF123:
00045d 9418      	SEZ
00045e 9488      	CLC
00045f 9508      	RET
                 __CMPF120:
000460 2377      	TST  R23
000461 f7c2      	BRPL __CMPF122
000462 1797      	CP   R25,R23
000463 f398      	BRLO __CMPF121
000464 f7a9      	BRNE __CMPF122
000465 17ea      	CP   R30,R26
000466 07fb      	CPC  R31,R27
000467 0768      	CPC  R22,R24
000468 f388      	BRLO __CMPF122
000469 f399      	BREQ __CMPF123
00046a cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00046b 2400      	CLR  R0
00046c 0daf      	ADD  R26,R15
00046d 1db0      	ADC  R27,R0
00046e 9508      	RET
                 
                 __ANEGW1:
00046f 95f1      	NEG  R31
000470 95e1      	NEG  R30
000471 40f0      	SBCI R31,0
000472 9508      	RET
                 
                 __ANEGD1:
000473 95f0      	COM  R31
000474 9560      	COM  R22
000475 9570      	COM  R23
000476 95e1      	NEG  R30
000477 4fff      	SBCI R31,-1
000478 4f6f      	SBCI R22,-1
000479 4f7f      	SBCI R23,-1
00047a 9508      	RET
                 
                 __CWD1:
00047b 2f6f      	MOV  R22,R31
00047c 0f66      	ADD  R22,R22
00047d 0b66      	SBC  R22,R22
00047e 2f76      	MOV  R23,R22
00047f 9508      	RET
                 
                 __DIVW21U:
000480 2400      	CLR  R0
000481 2411      	CLR  R1
000482 e190      	LDI  R25,16
                 __DIVW21U1:
000483 0faa      	LSL  R26
000484 1fbb      	ROL  R27
000485 1c00      	ROL  R0
000486 1c11      	ROL  R1
000487 1a0e      	SUB  R0,R30
000488 0a1f      	SBC  R1,R31
000489 f418      	BRCC __DIVW21U2
00048a 0e0e      	ADD  R0,R30
00048b 1e1f      	ADC  R1,R31
00048c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00048d 60a1      	SBR  R26,1
                 __DIVW21U3:
00048e 959a      	DEC  R25
00048f f799      	BRNE __DIVW21U1
000490 01fd      	MOVW R30,R26
000491 01d0      	MOVW R26,R0
000492 9508      	RET
                 
                 __DIVW21:
000493 d004      	RCALL __CHKSIGNW
000494 dfeb      	RCALL __DIVW21U
000495 f40e      	BRTC __DIVW211
000496 dfd8      	RCALL __ANEGW1
                 __DIVW211:
000497 9508      	RET
                 
                 __CHKSIGNW:
000498 94e8      	CLT
000499 fff7      	SBRS R31,7
00049a c002      	RJMP __CHKSW1
00049b dfd3      	RCALL __ANEGW1
00049c 9468      	SET
                 __CHKSW1:
00049d ffb7      	SBRS R27,7
00049e c006      	RJMP __CHKSW2
00049f 95a0      	COM  R26
0004a0 95b0      	COM  R27
0004a1 9611      	ADIW R26,1
0004a2 f800      	BLD  R0,0
0004a3 9403      	INC  R0
0004a4 fa00      	BST  R0,0
                 __CHKSW2:
0004a5 9508      	RET
                 
                 __GETW1P:
0004a6 91ed      	LD   R30,X+
0004a7 91fc      	LD   R31,X
0004a8 9711      	SBIW R26,1
0004a9 9508      	RET
                 
                 __GETW1PF:
0004aa 9005      	LPM  R0,Z+
0004ab 91f4      	LPM  R31,Z
0004ac 2de0      	MOV  R30,R0
0004ad 9508      	RET
                 
                 __PUTPARD1:
0004ae 937a      	ST   -Y,R23
0004af 936a      	ST   -Y,R22
0004b0 93fa      	ST   -Y,R31
0004b1 93ea      	ST   -Y,R30
0004b2 9508      	RET
                 
                 __SAVELOCR6:
0004b3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0004b4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0004b5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0004b6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0004b7 931a      	ST   -Y,R17
0004b8 930a      	ST   -Y,R16
0004b9 9508      	RET
                 
                 __LOADLOCR6:
0004ba 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0004bb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0004bc 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0004bd 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0004be 8119      	LDD  R17,Y+1
0004bf 8108      	LD   R16,Y
0004c0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  27 r1 :  16 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  37 r17:  35 r18:  37 r19:  14 r20:  17 r21:  45 r22:  38 r23:  31 
r24:  35 r25:  20 r26: 123 r27:  51 r28:  17 r29:   1 r30: 203 r31:  83 
x  :  23 y  : 194 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   6 
adiw  :  27 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   1 break :   0 breq  :  23 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   1 brmi  :   6 brne  :  39 brpl  :   5 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 call  :  55 
cbi   :   6 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  20 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   6 
cp    :   9 cpc   :  10 cpi   :  39 cpse  :   0 dec   :  12 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   3 jmp   :  23 ld    :  26 ldd   :  91 ldi   : 130 
lds   :   0 lpm   :  16 lsl   :   9 lsr   :   0 mov   :  30 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   7 out   :  16 pop   :  10 push  :   9 rcall :  34 ret   :  39 
reti  :   0 rjmp  :  80 rol   :  19 ror   :   4 sbc   :   7 sbci  :   8 
sbi   :   8 sbic  :   0 sbis  :   1 sbiw  :  20 sbr   :   1 sbrc  :   2 
sbrs  :  13 sec   :   3 seh   :   0 sei   :   0 sen   :   0 ser   :   5 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  66 std   :  37 sts   :   2 sub   :   3 subi  :  17 swap  :   1 
tst   :  14 wdr   :   1 
Instructions used: 77 out of 116 (66.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000982   2368     66   2434   16384  14.9%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
